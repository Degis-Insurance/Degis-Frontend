{
    "contractName": "NaughtyFactory",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_feeToSetter",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "_nextId",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "feeTo",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "feeToSetter",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "policyCore",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "getLatestTokenAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_tokenAddress1",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_tokenAddress2",
            "type": "address"
          }
        ],
        "name": "getPairAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_policyCore",
            "type": "address"
          }
        ],
        "name": "setPolicyCoreAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_feeTo",
            "type": "address"
          }
        ],
        "name": "setFeeTo",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_feeToSetter",
            "type": "address"
          }
        ],
        "name": "setFeeToSetter",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_policyTokenAddress",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_stablecoin",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_deadline",
            "type": "uint256"
          }
        ],
        "name": "deployPool",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_policyTokenName",
            "type": "string"
          }
        ],
        "name": "deployPolicyToken",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_nextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_policyTokenName\",\"type\":\"string\"}],\"name\":\"deployPolicyToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"deployPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress2\",\"type\":\"address\"}],\"name\":\"getPairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyCore\",\"type\":\"address\"}],\"name\":\"setPolicyCoreAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract to deploy new pools periodically      Each pool(product) will have a unique naughtyId      Each pool will have its pool token      PolicyToken - Stablecoin      Token 0 may change but Token 1 is always stablecoin.\",\"kind\":\"dev\",\"methods\":{\"deployPolicyToken(string)\":{\"params\":{\"_policyTokenName\":\": Name of the policyToken\"},\"returns\":{\"_0\":\"PolicyToken address\"}},\"deployPool(address,address,uint256)\":{\"params\":{\"_policyTokenAddress\":\": Address of policy token\",\"_stablecoin\":\": Address of the stable coin\"},\"returns\":{\"_0\":\"Address of the pool\"}},\"getLatestTokenAddress()\":{\"returns\":{\"_0\":\"Latest token address\"}},\"getPairAddress(address,address)\":{\"returns\":{\"_0\":\"Pool address of the two tokens\"}},\"setFeeTo(address)\":{\"params\":{\"_feeTo\":\"Address to receive the fee\"}},\"setFeeToSetter(address)\":{\"params\":{\"_feeToSetter\":\"Address to control the feeTo\"}},\"setPolicyCoreAddress(address)\":{\"params\":{\"_policyCore\":\": Address of policyCore contract\"}}},\"title\":\"Naughty Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployPolicyToken(string)\":{\"notice\":\"For each round we need to first create the policytoken(ERC20)\"},\"deployPool(address,address,uint256)\":{\"notice\":\"After deploy the policytoken and get the address,         we deploy the policyToken - stablecoin pool contract\"},\"getLatestTokenAddress()\":{\"notice\":\"Next token to be deployed\"},\"getPairAddress(address,address)\":{\"notice\":\"Get the pair address deployed by the factory         PolicyToken address first, and then stablecoin address         The order of the token not matters\"},\"setFeeTo(address)\":{\"notice\":\"Set feeTo address\"},\"setFeeToSetter(address)\":{\"notice\":\"Set feeToSetter address\"},\"setPolicyCoreAddress(address)\":{\"notice\":\"Remember to call this function to set the policyCore address         < PolicyCore should be the owner of policyToken >\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NaughtyFactory.sol\":\"NaughtyFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"prb-math/contracts/PRBMath.sol\":{\"keccak256\":\"0x62cbabae4910e168e99b9c2c3e3b5c9c7ad5e7abd961dcc63b7ea3d83d8ea87e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4b964fe2e49911c7b4b3c2ce230f606fd0ce8b7edc9dc7d0145ba2fb76bf2e71\",\"dweb:/ipfs/QmcEfVW9EfV3JCYavF1L3LxtqivHXWFTtWpkwNEsgzxG1r\"]},\"project:/contracts/NaughtyFactory.sol\":{\"keccak256\":\"0x56ba4c66c552631079ab214498bda749498ab771713c08345e6622448e5e8447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b18687dda003f85806ca03b6002650560de4e6dc9373900d3065ceec09b1ef65\",\"dweb:/ipfs/QmRQtJEtXn1jtG6MRnNzPinEkRGuAd3DAVAzzwBqJyfzTZ\"]},\"project:/contracts/NaughtyPair.sol\":{\"keccak256\":\"0xcfbd2477ae63e2839671c22cad3db0ef9cc5bcb051b736f4bb2e9027fac0952a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f0eff76e8c7e45e7f91897324a9c4068766b43898215777919cd0284efdfee1\",\"dweb:/ipfs/QmUhKSLHoSCBiRcdUgoDPA6c9WccMAL74jrrfV98SP3Sdp\"]},\"project:/contracts/PolicyToken.sol\":{\"keccak256\":\"0x6d05dd2f0c54cbaf1f07a4dc1e205694b772c72792ffb490ca2a801571e7efda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dda9e8a524168469ac31380ef96da009927d3d977f6be395e3e9f09b785a037\",\"dweb:/ipfs/QmVWYPnHhue5rsGHSr4uSmsu3Pjm19YN5uT6BSvbfRBznM\"]},\"project:/contracts/PoolLPToken.sol\":{\"keccak256\":\"0x8d32ba41358d92d4263d9a1a58afb8e8d64e75bd87836e92f498c2ac6c485a1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2769dfa4b112fb66a9198c51cca68df083f6f17f5a85c52b43720c848823d76\",\"dweb:/ipfs/QmdNgoKrERWdcCeM9wYcQquJ6xZ6HRMvh8uqgYuFVczLrn\"]},\"project:/contracts/interfaces/INaughtyFactory.sol\":{\"keccak256\":\"0x22300ccfc1522eea03107917fa6ffa2513fe93d9f079c646152968a328b826b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e147946583ed683ea67ac7e7a1883eec837f3a59a5bea7440995b1a123b3d5b8\",\"dweb:/ipfs/QmQWepPjcPwotYeBDuTVFtDgLMJXyj3EcppS9P2jnpRH4T\"]},\"project:/contracts/interfaces/INaughtyPair.sol\":{\"keccak256\":\"0xcf132eff60a4cee19feeee92782dd93475cc51813a872d9faf97f6ba3e665ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c52882612d623d592b4624b16f71882a7380ac0d6ae0e282d7fdfe694561b53\",\"dweb:/ipfs/QmbhCn96skvNHDaQEVX7NYiewaBeaF41Y6vaKWB8oi7TXc\"]},\"project:/contracts/interfaces/IPolicyCore.sol\":{\"keccak256\":\"0x7904057f697ad46c576120d01ec247127c332f0c8ef82ab0843af447b25bd8ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24f6b21b8d3b9688867e66de4ac55d2180314bbc3caf6a03c2a7db39f10e20f2\",\"dweb:/ipfs/QmZXgDcX9LqrSk2aKUXkzRCV51uRNuevSuVb6D1bjPYyWS\"]},\"project:/contracts/interfaces/IPolicyToken.sol\":{\"keccak256\":\"0xbd272c9f6a2024dc41a21fa0dae28e2b9288c3431f2f0cb8bb59a4841f4f876f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ee5c16af597427e360762904547d5e91d35bcaaa5e206470cff3d6fcc98da69\",\"dweb:/ipfs/QmZN7d1oatiZ3HYXWCAnhddK1gtQRLfn59VuXgcqZ6agnL\"]}},\"version\":1}",
    "bytecode": "0x608060405234801561001057600080fd5b50604051613f13380380613f1383398101604081905261002f91610054565b600680546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b613e80806100936000396000f3fe60806040523480156200001157600080fd5b5060043610620000b75760003560e01c8063a3232bf3116200007a578063a3232bf31462000157578063b4f69a2f146200016e578063e30145e01462000185578063f03c61321462000199578063f2f2fff514620001b0578063f46901ed14620001c957600080fd5b8063017e7e5814620000bc578063094b741514620000ed57806361c8f99d14620001015780639fd2650e1462000136578063a2e74af61462000140575b600080fd5b600554620000d0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600654620000d0906001600160a01b031681565b620001346200011236600462000961565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b620000d0620001e0565b620001346200015136600462000961565b62000227565b620000d0620001683660046200097f565b6200027f565b620000d06200017f366004620009c0565b620004de565b600454620000d0906001600160a01b031681565b620000d0620001aa36600462000a0e565b620005a8565b620001ba60035481565b604051908152602001620000e4565b62000134620001da36600462000961565b6200065e565b6000806001600354620001f4919062000adf565b9050600281815481106200020c576200020c62000af9565b6000918252602090912001546001600160a01b031692915050565b6006546001600160a01b031633146200025d5760405162461bcd60e51b8152600401620002549062000b0f565b60405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6004805460405163237dd6ed60e11b81526001600160a01b0385811693820193909352600092909116906346fbadda9060240160206040518083038186803b158015620002cb57600080fd5b505afa158015620002e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000306919062000b56565b1515600114620003785760405162461bcd60e51b815260206004820152603660248201527f596f752067697665207468652077726f6e67206f72646572206f6620706f6c6960448201527531bcaa37b5b2b71030b7321039ba30b13632b1b7b4b760511b606482015260840162000254565b6000604051806020016200038c9062000928565b601f1982820381018352601f9091011660405290506000620003ae86620006ad565b620003b986620006ad565b604051602001620003cc92919062000bad565b6040516020818303038152906040528051906020012090506000620003f28383620006c5565b6040516305e52ecf60e21b81526001600160a01b03898116600483015288811660248301526044820188905291925090821690631794bb3c90606401600060405180830381600087803b1580156200044957600080fd5b505af11580156200045e573d6000803e3d6000fd5b5050506001600160a01b038089166000908152602081815260408083208b85168452909152812080549285166001600160a01b0319938416811790915560018054808201825592527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101805490921617905550925050509392505050565b6004805460405163237dd6ed60e11b81526001600160a01b0384811693820193909352600092839283929116906346fbadda9060240160206040518083038186803b1580156200052d57600080fd5b505afa15801562000542573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000568919062000b56565b6200057557838562000578565b84845b6001600160a01b039182166000908152602081815260408083209385168352929052205416925050505b92915050565b60008082604051602001620005be919062000be0565b6040516020818303038152906040528051906020012090506000620005e384620006df565b90506000620005f38284620006c5565b6002805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384161790556003805492935090620006508362000bfe565b909155509095945050505050565b6006546001600160a01b031633146200068b5760405162461bcd60e51b8152600401620002549062000b0f565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6060620005a26001600160a01b038316601462000767565b6000818351602085016000f59050803b620005a257600080fd5b6060600060405180602001620006f59062000936565b601f1982820381018352601f90910116604081905260045491925082916200073091869182916001600160a01b039091169060200162000c4a565b60408051601f198184030181529082905262000750929160200162000bad565b604051602081830303815290604052915050919050565b606060006200077883600262000c8c565b6200078590600262000cae565b67ffffffffffffffff811115620007a057620007a0620009f8565b6040519080825280601f01601f191660200182016040528015620007cb576020820181803683370190505b509050600360fc1b81600081518110620007e957620007e962000af9565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200081b576200081b62000af9565b60200101906001600160f81b031916908160001a90535060006200084184600262000c8c565b6200084e90600162000cae565b90505b6001811115620008d0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811062000886576200088662000af9565b1a60f81b8282815181106200089f576200089f62000af9565b60200101906001600160f81b031916908160001a90535060049490941c93620008c88162000cc9565b905062000851565b508315620009215760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000254565b9392505050565b6121028062000ce483390190565b6110658062002de683390190565b80356001600160a01b03811681146200095c57600080fd5b919050565b6000602082840312156200097457600080fd5b620009218262000944565b6000806000606084860312156200099557600080fd5b620009a08462000944565b9250620009b06020850162000944565b9150604084013590509250925092565b60008060408385031215620009d457600080fd5b620009df8362000944565b9150620009ef6020840162000944565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000a2157600080fd5b813567ffffffffffffffff8082111562000a3a57600080fd5b818401915084601f83011262000a4f57600080fd5b81358181111562000a645762000a64620009f8565b604051601f8201601f19908116603f0116810190838211818310171562000a8f5762000a8f620009f8565b8160405282815287602084870101111562000aa957600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562000af45762000af462000ac9565b500390565b634e487b7160e01b600052603260045260246000fd5b60208082526027908201527f4f6e6c7920666565546f5365747465722063616e2063616c6c207468697320666040820152663ab731ba34b7b760c91b606082015260800190565b60006020828403121562000b6957600080fd5b815180151581146200092157600080fd5b60005b8381101562000b9757818101518382015260200162000b7d565b8381111562000ba7576000848401525b50505050565b6000835162000bc181846020880162000b7a565b83519083019062000bd781836020880162000b7a565b01949350505050565b6000825162000bf481846020870162000b7a565b9190910192915050565b600060001982141562000c155762000c1562000ac9565b5060010190565b6000815180845262000c3681602086016020860162000b7a565b601f01601f19169290920160200192915050565b60608152600062000c5f606083018662000c1c565b828103602084015262000c73818662000c1c565b91505060018060a01b0383166040830152949350505050565b600081600019048311821515161562000ca95762000ca962000ac9565b500290565b6000821982111562000cc45762000cc462000ac9565b500190565b60008162000cdb5762000cdb62000ac9565b50600019019056fe60806040526008805460ff60e01b19167c01000000000000000000000000000000000000000000000000000000001790553480156200003d57600080fd5b506040518060400160405280600f81526020017f4e61756768747920506f6f6c204c5000000000000000000000000000000000008152506040518060400160405280600381526020017f4e4c5000000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000c2929190620000f3565b508051620000d8906004906020840190620000f3565b5050600580546001600160a01b0319163317905550620001ef565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b611f0380620001ff6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636a627842116100de578063a9059cbb11610097578063d21220a711610071578063d21220a714610389578063dd62ed3e1461039c578063f952f01a146102ee578063fff6cae9146103d557600080fd5b8063a9059cbb1461035a578063ba9a7a561461036d578063c45a01551461037657600080fd5b80636a627842146102c85780636d9a640a146102db57806370a08231146102ee57806389afcb441461031757806395d89b411461033f578063a457c2d71461034757600080fd5b806323b872dd1161014b5780633950935111610125578063395093511461027b5780633c756e141461028e578063570c7c39146102a15780636a5e2650146102b457600080fd5b806323b872dd1461025057806329dcb0cf14610263578063313ce5671461026c57600080fd5b806306fdde03146101935780630902f1ac146101b1578063095ea7b3146101db5780630dfe1681146101fe5780631794bb3c1461022957806318160ddd1461023e575b600080fd5b61019b6103dd565b6040516101a89190611c47565b60405180910390f35b600854604080516001600160701b038084168252600160701b9093049092166020830152016101a8565b6101ee6101e9366004611c96565b61046f565b60405190151581526020016101a8565b600654610211906001600160a01b031681565b6040516001600160a01b0390911681526020016101a8565b61023c610237366004611cc0565b610485565b005b6002545b6040519081526020016101a8565b6101ee61025e366004611cc0565b610531565b61024260095481565b604051601281526020016101a8565b6101ee610289366004611c96565b6105dd565b61023c61029c366004611c96565b610619565b61023c6102af366004611c96565b610627565b6008546101ee90600160e01b900460ff1681565b6102426102d6366004611cfc565b610631565b61023c6102e9366004611d17565b610884565b6102426102fc366004611cfc565b6001600160a01b031660009081526020819052604090205490565b61032a610325366004611cfc565b610d18565b604080519283526020830191909152016101a8565b61019b61107f565b6101ee610355366004611c96565b61108e565b6101ee610368366004611c96565b611127565b6102426103e881565b600554610211906001600160a01b031681565b600754610211906001600160a01b031681565b6102426103aa366004611d4c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61023c611134565b6060600380546103ec90611d7f565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611d7f565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b600061047c338484611281565b50600192915050565b6005546001600160a01b031633146104fc5760405162461bcd60e51b815260206004820152602f60248201527f63616e206f6e6c7920626520696e697469616c697a656420627920746865206660448201526e1858dd1bdc9e4818dbdb9d1c9858dd608a1b60648201526084015b60405180910390fd5b600680546001600160a01b039485166001600160a01b0319918216179091556007805493909416921691909117909155600955565b600061053e8484846113a6565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105c35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016104f3565b6105d08533858403611281565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161047c918590610614908690611dd0565b611281565b6106238282611576565b5050565b61062382826116c1565b60008060006106546008546001600160701b0380821692600160701b9092041690565b6006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156106a057600080fd5b505afa1580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d89190611de8565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561072157600080fd5b505afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190611de8565b905060006107706001600160701b03861684611e01565b905060006107876001600160701b03861684611e01565b9050600061079460025490565b9050806107cd576103e86107b06107ab8486611e18565b6117a0565b6107ba9190611e01565b97506107c8306103e8610627565b610814565b6108116001600160701b0388166107e48386611e18565b6107ee9190611e4d565b6001600160701b0388166108028486611e18565b61080c9190611e4d565b61191b565b97505b600088116108645760405162461bcd60e51b815260206004820152601d60248201527f696e73756666696369656e74206c6971756964697479206d696e74656400000060448201526064016104f3565b61086e8989610627565b6108788585611931565b50505050505050919050565b600854600160e01b900460ff1615156001146108b25760405162461bcd60e51b81526004016104f390611e6f565b6008805460ff60e01b19169055821515806108cd5750600082115b6109195760405162461bcd60e51b815260206004820152601b60248201527f4f757470757420616d6f756e74206e65656420746f206265203e30000000000060448201526064016104f3565b60008061093a6008546001600160701b0380821692600160701b9092041690565b6001600160701b031691506001600160701b03169150818510801561095e57508084105b6109a15760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b60448201526064016104f3565b60065460075460009182916001600160a01b039182169190811690871682148015906109df5750806001600160a01b0316876001600160a01b031614155b610a185760405162461bcd60e51b815260206004820152600a602482015269494e56414c49445f544f60b01b60448201526064016104f3565b8815610a3257610a326001600160a01b038316888b611a03565b8715610a4c57610a4c6001600160a01b038216888a611a03565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610a8b57600080fd5b505afa158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac39190611de8565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b158015610b0557600080fd5b505afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611de8565b9250505060008785610b4f9190611e01565b8311610b5c576000610b70565b610b668886611e01565b610b709084611e01565b90506000610b7e8886611e01565b8311610b8b576000610b9f565b610b958886611e01565b610b9f9084611e01565b90506000821180610bb05750600081115b610bfc5760405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e540000000000000060448201526064016104f3565b6000610c09836032611e18565b610c15866103e8611e18565b610c1f9190611e01565b90506000610c2e836032611e18565b610c3a866103e8611e18565b610c449190611e01565b9050610c508789611e18565b610c5d90620f4240611e18565b610c678284611e18565b1015610c995760405162461bcd60e51b81526020600482015260016024820152604b60f81b60448201526064016104f3565b5050610ca58484611931565b60408051838152602081018390529081018a9052606081018990526001600160a01b0388169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506008805460ff60e01b1916600160e01b17905550505050505050565b6000806008601c9054906101000a900460ff1615156001151514610d4e5760405162461bcd60e51b81526004016104f390611e6f565b6008805460ff60e01b19169055600080610d7c6008546001600160701b0380821692600160701b9092041690565b6006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610dc857600080fd5b505afa158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e009190611de8565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610e4957600080fd5b505afa158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e819190611de8565b306000908152602081905260409020546002549192509080610ea38584611e18565b610ead9190611e4d565b975080610eba8484611e18565b610ec49190611e4d565b9650600088118015610ed65750600087115b610f225760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e74206c6971756964697479206275726e656400000060448201526064016104f3565b610f2c3083610619565b600654610f43906001600160a01b03168a8a611a03565b600754610f5a906001600160a01b03168a89611a03565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610f9d57600080fd5b505afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190611de8565b6007546040516370a0823160e01b81523060048201529195506001600160a01b0316906370a082319060240160206040518083038186803b15801561101957600080fd5b505afa15801561102d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110519190611de8565b925061105d8484611931565b50506008805460ff60e01b1916600160e01b1790555093959294509192505050565b6060600480546103ec90611d7f565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156111105760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104f3565b61111d3385858403611281565b5060019392505050565b600061047c3384846113a6565b600854600160e01b900460ff1615156001146111625760405162461bcd60e51b81526004016104f390611e6f565b6008805460ff60e01b191690556006546040516370a0823160e01b815230600482015261126c916001600160a01b0316906370a082319060240160206040518083038186803b1580156111b457600080fd5b505afa1580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec9190611de8565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561122f57600080fd5b505afa158015611243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112679190611de8565b611931565b6008805460ff60e01b1916600160e01b179055565b6001600160a01b0383166112e35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104f3565b6001600160a01b0382166113445760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104f3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661140a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104f3565b6001600160a01b03821661146c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104f3565b6001600160a01b038316600090815260208190526040902054818110156114e45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104f3565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061151b908490611dd0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161156791815260200190565b60405180910390a35b50505050565b6001600160a01b0382166115d65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104f3565b6001600160a01b0382166000908152602081905260409020548181101561164a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104f3565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611679908490611e01565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611399565b505050565b6001600160a01b0382166117175760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104f3565b80600260008282546117299190611dd0565b90915550506001600160a01b03821660009081526020819052604081208054839290611756908490611dd0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000816117af57506000919050565b50600181600160801b81106117c95760409190911b9060801c5b6801000000000000000081106117e45760209190911b9060401c5b64010000000081106117fb5760109190911b9060201c5b6201000081106118105760089190911b9060101c5b61010081106118245760049190911b9060081c5b601081106118375760029190911b9060041c5b6008811061184757600182901b91505b600182848161185857611858611e37565b048301901c9150600182848161187057611870611e37565b048301901c9150600182848161188857611888611e37565b048301901c915060018284816118a0576118a0611e37565b048301901c915060018284816118b8576118b8611e37565b048301901c915060018284816118d0576118d0611e37565b048301901c915060018284816118e8576118e8611e37565b048301901c9150600082848161190057611900611e37565b049050808310156119115782611913565b805b949350505050565b600081831061192a57816105d6565b5090919050565b6001600160701b038083118015906119525750806001600160701b03168211155b6119915760405162461bcd60e51b815260206004820152601060248201526f55696e74313132204f564552464c4f5760801b60448201526064016104f3565b600880546001600160701b03848116600160701b9081026001600160e01b0319909316878316179290921792839055604080518483168152929093041660208201527f32dc813d3f262a05478ad1165d5701040e411d9a6e1684c8c2da1c8e6f3b8022910160405180910390a1505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526116bc92869291600091611a93918516908490611b10565b8051909150156116bc5780806020019051810190611ab19190611e8f565b6116bc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f3565b6060611913848460008585843b611b695760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f3565b600080866001600160a01b03168587604051611b859190611eb1565b60006040518083038185875af1925050503d8060008114611bc2576040519150601f19603f3d011682016040523d82523d6000602084013e611bc7565b606091505b5091509150611bd7828286611be2565b979650505050505050565b60608315611bf15750816105d6565b825115611c015782518084602001fd5b8160405162461bcd60e51b81526004016104f39190611c47565b60005b83811015611c36578181015183820152602001611c1e565b838111156115705750506000910152565b6020815260008251806020840152611c66816040850160208701611c1b565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611c9157600080fd5b919050565b60008060408385031215611ca957600080fd5b611cb283611c7a565b946020939093013593505050565b600080600060608486031215611cd557600080fd5b611cde84611c7a565b9250611cec60208501611c7a565b9150604084013590509250925092565b600060208284031215611d0e57600080fd5b6105d682611c7a565b600080600060608486031215611d2c57600080fd5b8335925060208401359150611d4360408501611c7a565b90509250925092565b60008060408385031215611d5f57600080fd5b611d6883611c7a565b9150611d7660208401611c7a565b90509250929050565b600181811c90821680611d9357607f821691505b60208210811415611db457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611de357611de3611dba565b500190565b600060208284031215611dfa57600080fd5b5051919050565b600082821015611e1357611e13611dba565b500390565b6000816000190483118215151615611e3257611e32611dba565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611e6a57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600690820152651313d0d2d15160d21b604082015260600190565b600060208284031215611ea157600080fd5b815180151581146105d657600080fd5b60008251611ec3818460208701611c1b565b919091019291505056fea2646970667358221220127f29bf751b5142d744744f18f0d470224b9c8e29b0c0d33332c54a40b94f3964736f6c6343000809003360806040523480156200001157600080fd5b506040516200106538038062001065833981016040819052620000349162000226565b8251839083906200004d9060039060208501906200009a565b508051620000639060049060208401906200009a565b5050600580546001600160a01b039093166001600160a01b0319938416811790915560068054909316179091555062000309915050565b828054620000a890620002b3565b90600052602060002090601f016020900481019282620000cc576000855562000117565b82601f10620000e757805160ff191683800117855562000117565b8280016001018555821562000117579182015b8281111562000117578251825591602001919060010190620000fa565b506200012592915062000129565b5090565b5b808211156200012557600081556001016200012a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126200018157600080fd5b81516001600160401b03808211156200019e576200019e62000140565b604051601f8301601f19908116603f01168101908282118183101715620001c957620001c962000140565b81604052838152602092508683858801011115620001e657600080fd5b600091505b838210156200020a5785820183015181830184015290820190620001eb565b838211156200021c5760008385830101525b9695505050505050565b6000806000606084860312156200023c57600080fd5b83516001600160401b03808211156200025457600080fd5b62000262878388016200016f565b945060208601519150808211156200027957600080fd5b5062000288868287016200016f565b604086015190935090506001600160a01b0381168114620002a857600080fd5b809150509250925092565b600181811c90821680620002c857607f821691505b6020821081141562000303577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b610d4c80620003196000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610224578063a9059cbb14610237578063d7fc5b151461024a578063dd62ed3e1461025d57600080fd5b806370a08231146101cd5780638da5cb5b146101f657806395d89b41146102095780639dc29fac1461021157600080fd5b806323b872dd116100d357806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857600080fd5b806306fdde03146101055780630754617214610123578063095ea7b31461014e57806318160ddd14610171575b600080fd5b61010d610296565b60405161011a9190610b28565b60405180910390f35b600654610136906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61016161015c366004610b99565b610328565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610161610191366004610bc3565b61033e565b6040516012815260200161011a565b6101616101b3366004610b99565b6103ed565b6101cb6101c6366004610b99565b610429565b005b6101756101db366004610bff565b6001600160a01b031660009081526020819052604090205490565b600554610136906001600160a01b031681565b61010d610461565b6101cb61021f366004610b99565b610470565b610161610232366004610b99565b6104a4565b610161610245366004610b99565b61053d565b6101cb610258366004610bff565b61054a565b61017561026b366004610c21565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a590610c54565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610c54565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b600061033533848461060f565b50600192915050565b600061034b848484610734565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103d55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e2853385840361060f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610335918590610424908690610ca5565b61060f565b6006546001600160a01b031633146104535760405162461bcd60e51b81526004016103cc90610cbd565b61045d8282610903565b5050565b6060600480546102a590610c54565b6006546001600160a01b0316331461049a5760405162461bcd60e51b81526004016103cc90610cbd565b61045d82826109e2565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105265760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103cc565b610533338585840361060f565b5060019392505050565b6000610335338484610734565b6005546001600160a01b031633146105ae5760405162461bcd60e51b815260206004820152602160248201527f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016103cc565b600680546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f7d18367aacbd671e57a27b568d6e1afbcc4c28b30a1b898aacf1e3a4b7d19cd1910160405180910390a15050565b6001600160a01b0383166106715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b0382166106d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166107fa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b038316600090815260208190526040902054818110156108725760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108a9908490610ca5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108f591815260200190565b60405180910390a350505050565b6001600160a01b0382166109595760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cc565b806002600082825461096b9190610ca5565b90915550506001600160a01b03821660009081526020819052604081208054839290610998908490610ca5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a425760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cc565b6001600160a01b03821660009081526020819052604090205481811015610ab65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cc565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ae5908490610cff565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610727565b600060208083528351808285015260005b81811015610b5557858101830151858201604001528201610b39565b81811115610b67576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b9457600080fd5b919050565b60008060408385031215610bac57600080fd5b610bb583610b7d565b946020939093013593505050565b600080600060608486031215610bd857600080fd5b610be184610b7d565b9250610bef60208501610b7d565b9150604084013590509250925092565b600060208284031215610c1157600080fd5b610c1a82610b7d565b9392505050565b60008060408385031215610c3457600080fd5b610c3d83610b7d565b9150610c4b60208401610b7d565b90509250929050565b600181811c90821680610c6857607f821691505b60208210811415610c8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cb857610cb8610c8f565b500190565b60208082526022908201527f6f6e6c79206d696e7465722063616e2063616c6c20746869732066756e63746960408201526137b760f11b606082015260800190565b600082821015610d1157610d11610c8f565b50039056fea2646970667358221220f9ef82f6e77f4e2ddc82ac01fa2e084acd47687f90376eedd385d8b82cea2d3464736f6c63430008090033a264697066735822122091f31e3c602e5a30ccf1253759aea87dc5732b3c46062c106f3bc691004e845364736f6c63430008090033",
    "deployedBytecode": "",
    "immutableReferences": {},
    "generatedSources": [
      {
        "ast": {
          "nodeType": "YulBlock",
          "src": "0:306:30",
          "statements": [
            {
              "nodeType": "YulBlock",
              "src": "6:3:30",
              "statements": []
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "95:209:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "141:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "150:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "153:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "143:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "143:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "143:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "116:7:30"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "125:9:30"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "112:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "112:23:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "137:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "108:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "108:32:30"
                    },
                    "nodeType": "YulIf",
                    "src": "105:52:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "166:29:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "185:9:30"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "179:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "179:16:30"
                    },
                    "variables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "170:5:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "258:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "267:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "270:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "260:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "260:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "260:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "217:5:30"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:5:30"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "243:3:30",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "248:1:30",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "239:3:30"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "239:11:30"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "252:1:30",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "235:19:30"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "224:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "224:31:30"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "214:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "214:42:30"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "207:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "207:50:30"
                    },
                    "nodeType": "YulIf",
                    "src": "204:70:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "283:15:30",
                    "value": {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "293:5:30"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "283:6:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_address_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "61:9:30",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "72:7:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "84:6:30",
                  "type": ""
                }
              ],
              "src": "14:290:30"
            }
          ]
        },
        "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
        "id": 30,
        "language": "Yul",
        "name": "#utility.yul"
      }
    ],
    "deployedGeneratedSources": [
      {
        "ast": {
          "nodeType": "YulBlock",
          "src": "0:7500:30",
          "statements": [
            {
              "nodeType": "YulBlock",
              "src": "6:3:30",
              "statements": []
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "115:102:30",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "125:26:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "137:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "148:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "133:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "133:18:30"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "125:4:30"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "167:9:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "182:6:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "198:3:30",
                                      "type": "",
                                      "value": "160"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "203:1:30",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "194:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "194:11:30"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "207:1:30",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "190:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "190:19:30"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "178:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "178:32:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "160:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "160:51:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "160:51:30"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "84:9:30",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "95:6:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "106:4:30",
                  "type": ""
                }
              ],
              "src": "14:203:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "271:124:30",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "281:29:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "303:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "290:12:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "290:20:30"
                    },
                    "variableNames": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "281:5:30"
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "373:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "382:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "385:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "375:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "375:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "375:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "332:5:30"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "343:5:30"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "358:3:30",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "363:1:30",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "354:3:30"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "354:11:30"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "367:1:30",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "350:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "350:19:30"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "339:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "339:31:30"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "329:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "329:42:30"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "322:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "322:50:30"
                    },
                    "nodeType": "YulIf",
                    "src": "319:70:30"
                  }
                ]
              },
              "name": "abi_decode_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "250:6:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "261:5:30",
                  "type": ""
                }
              ],
              "src": "222:173:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "470:116:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "516:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "525:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "528:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "518:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "518:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "518:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "491:7:30"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "500:9:30"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "487:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "487:23:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "512:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "483:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "483:32:30"
                    },
                    "nodeType": "YulIf",
                    "src": "480:52:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "541:39:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "570:9:30"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "551:18:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "551:29:30"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "541:6:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "436:9:30",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "447:7:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "459:6:30",
                  "type": ""
                }
              ],
              "src": "400:186:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "695:224:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "741:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "750:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "753:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "743:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "743:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "743:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "716:7:30"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "725:9:30"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "712:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "712:23:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "737:2:30",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "708:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "708:32:30"
                    },
                    "nodeType": "YulIf",
                    "src": "705:52:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "766:39:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "795:9:30"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "776:18:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "776:29:30"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "766:6:30"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "814:48:30",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "847:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "858:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "843:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "843:18:30"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "824:18:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "824:38:30"
                    },
                    "variableNames": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "814:6:30"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "871:42:30",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "898:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "909:2:30",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "894:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "894:18:30"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "881:12:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "881:32:30"
                    },
                    "variableNames": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "871:6:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_addresst_addresst_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "645:9:30",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "656:7:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "668:6:30",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "676:6:30",
                  "type": ""
                },
                {
                  "name": "value2",
                  "nodeType": "YulTypedName",
                  "src": "684:6:30",
                  "type": ""
                }
              ],
              "src": "591:328:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1011:173:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1057:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1066:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1069:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1059:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1059:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1059:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1032:7:30"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1041:9:30"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "1028:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1028:23:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1053:2:30",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "1024:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1024:32:30"
                    },
                    "nodeType": "YulIf",
                    "src": "1021:52:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1082:39:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1111:9:30"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "1092:18:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1092:29:30"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1082:6:30"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1130:48:30",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1163:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1174:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1159:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1159:18:30"
                        }
                      ],
                      "functionName": {
                        "name": "abi_decode_address",
                        "nodeType": "YulIdentifier",
                        "src": "1140:18:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1140:38:30"
                    },
                    "variableNames": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1130:6:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_addresst_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "969:9:30",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "980:7:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "992:6:30",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "1000:6:30",
                  "type": ""
                }
              ],
              "src": "924:260:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1221:95:30",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1238:1:30",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1245:3:30",
                              "type": "",
                              "value": "224"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1250:10:30",
                              "type": "",
                              "value": "0x4e487b71"
                            }
                          ],
                          "functionName": {
                            "name": "shl",
                            "nodeType": "YulIdentifier",
                            "src": "1241:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1241:20:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1231:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1231:31:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1231:31:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1278:1:30",
                          "type": "",
                          "value": "4"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1281:4:30",
                          "type": "",
                          "value": "0x41"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1271:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1271:15:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1271:15:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1302:1:30",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1305:4:30",
                          "type": "",
                          "value": "0x24"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "1295:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1295:15:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1295:15:30"
                  }
                ]
              },
              "name": "panic_error_0x41",
              "nodeType": "YulFunctionDefinition",
              "src": "1189:127:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1401:842:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1447:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1456:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1459:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1449:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1449:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1449:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1422:7:30"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1431:9:30"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "1418:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1418:23:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1443:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "1414:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1414:32:30"
                    },
                    "nodeType": "YulIf",
                    "src": "1411:52:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1472:37:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1499:9:30"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "1486:12:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1486:23:30"
                    },
                    "variables": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1476:6:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1518:28:30",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "1528:18:30",
                      "type": "",
                      "value": "0xffffffffffffffff"
                    },
                    "variables": [
                      {
                        "name": "_1",
                        "nodeType": "YulTypedName",
                        "src": "1522:2:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1573:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1582:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1585:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1575:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1575:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1575:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "1561:6:30"
                        },
                        {
                          "name": "_1",
                          "nodeType": "YulIdentifier",
                          "src": "1569:2:30"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "1558:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1558:14:30"
                    },
                    "nodeType": "YulIf",
                    "src": "1555:34:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1598:32:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1612:9:30"
                        },
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "1623:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "1608:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1608:22:30"
                    },
                    "variables": [
                      {
                        "name": "_2",
                        "nodeType": "YulTypedName",
                        "src": "1602:2:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1678:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1687:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1690:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1680:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1680:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1680:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1657:2:30"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1661:4:30",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1653:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1653:13:30"
                            },
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1668:7:30"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1649:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1649:27:30"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "1642:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1642:35:30"
                    },
                    "nodeType": "YulIf",
                    "src": "1639:55:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1703:26:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "_2",
                          "nodeType": "YulIdentifier",
                          "src": "1726:2:30"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "1713:12:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1713:16:30"
                    },
                    "variables": [
                      {
                        "name": "_3",
                        "nodeType": "YulTypedName",
                        "src": "1707:2:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1752:22:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x41",
                              "nodeType": "YulIdentifier",
                              "src": "1754:16:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1754:18:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1754:18:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "_3",
                          "nodeType": "YulIdentifier",
                          "src": "1744:2:30"
                        },
                        {
                          "name": "_1",
                          "nodeType": "YulIdentifier",
                          "src": "1748:2:30"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "1741:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1741:10:30"
                    },
                    "nodeType": "YulIf",
                    "src": "1738:36:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1783:17:30",
                    "value": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1797:2:30",
                          "type": "",
                          "value": "31"
                        }
                      ],
                      "functionName": {
                        "name": "not",
                        "nodeType": "YulIdentifier",
                        "src": "1793:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1793:7:30"
                    },
                    "variables": [
                      {
                        "name": "_4",
                        "nodeType": "YulTypedName",
                        "src": "1787:2:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1809:23:30",
                    "value": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1829:2:30",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "1823:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1823:9:30"
                    },
                    "variables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "1813:6:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "1841:71:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulIdentifier",
                          "src": "1863:6:30"
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1887:2:30"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1891:4:30",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1883:3:30"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1883:13:30"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1898:2:30"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "1879:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1879:22:30"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1903:2:30",
                                  "type": "",
                                  "value": "63"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1875:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1875:31:30"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "1908:2:30"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1871:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1871:40:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "1859:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1859:53:30"
                    },
                    "variables": [
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulTypedName",
                        "src": "1845:10:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1971:22:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x41",
                              "nodeType": "YulIdentifier",
                              "src": "1973:16:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1973:18:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1973:18:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "1930:10:30"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1942:2:30"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1927:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1927:18:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "1950:10:30"
                            },
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1962:6:30"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "1947:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1947:22:30"
                        }
                      ],
                      "functionName": {
                        "name": "or",
                        "nodeType": "YulIdentifier",
                        "src": "1924:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1924:46:30"
                    },
                    "nodeType": "YulIf",
                    "src": "1921:72:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2009:2:30",
                          "type": "",
                          "value": "64"
                        },
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulIdentifier",
                          "src": "2013:10:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2002:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2002:22:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2002:22:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulIdentifier",
                          "src": "2040:6:30"
                        },
                        {
                          "name": "_3",
                          "nodeType": "YulIdentifier",
                          "src": "2048:2:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2033:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2033:18:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2033:18:30"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2097:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2106:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2109:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "2099:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2099:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2099:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2074:2:30"
                                },
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2078:2:30"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2070:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2070:11:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2083:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2066:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2066:20:30"
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulIdentifier",
                          "src": "2088:7:30"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "2063:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2063:33:30"
                    },
                    "nodeType": "YulIf",
                    "src": "2060:53:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2139:6:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2147:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2135:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2135:15:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "2156:2:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2160:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2152:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2152:11:30"
                        },
                        {
                          "name": "_3",
                          "nodeType": "YulIdentifier",
                          "src": "2165:2:30"
                        }
                      ],
                      "functionName": {
                        "name": "calldatacopy",
                        "nodeType": "YulIdentifier",
                        "src": "2122:12:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2122:46:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2122:46:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2192:6:30"
                                },
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2200:2:30"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2188:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2188:15:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2205:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2184:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2184:24:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2210:1:30",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2177:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2177:35:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2177:35:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2221:16:30",
                    "value": {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2231:6:30"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2221:6:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_string_memory_ptr",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1367:9:30",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "1378:7:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1390:6:30",
                  "type": ""
                }
              ],
              "src": "1321:922:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2349:76:30",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "2359:26:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2371:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2382:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "2367:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2367:18:30"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2359:4:30"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2401:9:30"
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2412:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2394:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2394:25:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2394:25:30"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "2318:9:30",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "2329:6:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "2340:4:30",
                  "type": ""
                }
              ],
              "src": "2248:177:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2462:95:30",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2479:1:30",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2486:3:30",
                              "type": "",
                              "value": "224"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2491:10:30",
                              "type": "",
                              "value": "0x4e487b71"
                            }
                          ],
                          "functionName": {
                            "name": "shl",
                            "nodeType": "YulIdentifier",
                            "src": "2482:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2482:20:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2472:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2472:31:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2472:31:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2519:1:30",
                          "type": "",
                          "value": "4"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2522:4:30",
                          "type": "",
                          "value": "0x11"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2512:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2512:15:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2512:15:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2543:1:30",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2546:4:30",
                          "type": "",
                          "value": "0x24"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "2536:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2536:15:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2536:15:30"
                  }
                ]
              },
              "name": "panic_error_0x11",
              "nodeType": "YulFunctionDefinition",
              "src": "2430:127:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2611:76:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2633:22:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "2635:16:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2635:18:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2635:18:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "2627:1:30"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "2630:1:30"
                        }
                      ],
                      "functionName": {
                        "name": "lt",
                        "nodeType": "YulIdentifier",
                        "src": "2624:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2624:8:30"
                    },
                    "nodeType": "YulIf",
                    "src": "2621:34:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2664:17:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "2676:1:30"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "2679:1:30"
                        }
                      ],
                      "functionName": {
                        "name": "sub",
                        "nodeType": "YulIdentifier",
                        "src": "2672:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2672:9:30"
                    },
                    "variableNames": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "2664:4:30"
                      }
                    ]
                  }
                ]
              },
              "name": "checked_sub_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "2593:1:30",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "2596:1:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "diff",
                  "nodeType": "YulTypedName",
                  "src": "2602:4:30",
                  "type": ""
                }
              ],
              "src": "2562:125:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2724:95:30",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2741:1:30",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2748:3:30",
                              "type": "",
                              "value": "224"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2753:10:30",
                              "type": "",
                              "value": "0x4e487b71"
                            }
                          ],
                          "functionName": {
                            "name": "shl",
                            "nodeType": "YulIdentifier",
                            "src": "2744:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2744:20:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2734:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2734:31:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2734:31:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2781:1:30",
                          "type": "",
                          "value": "4"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2784:4:30",
                          "type": "",
                          "value": "0x32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2774:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2774:15:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2774:15:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2805:1:30",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2808:4:30",
                          "type": "",
                          "value": "0x24"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "2798:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2798:15:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2798:15:30"
                  }
                ]
              },
              "name": "panic_error_0x32",
              "nodeType": "YulFunctionDefinition",
              "src": "2692:127:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2998:229:30",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3015:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3026:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3008:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3008:21:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3008:21:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3049:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3060:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3045:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3045:18:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3065:2:30",
                          "type": "",
                          "value": "39"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3038:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3038:30:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3038:30:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3088:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3099:2:30",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3084:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3084:18:30"
                        },
                        {
                          "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "3104:34:30",
                          "type": "",
                          "value": "Only feeToSetter can call this f"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3077:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3077:62:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3077:62:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3159:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3170:2:30",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3155:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3155:18:30"
                        },
                        {
                          "hexValue": "756e6374696f6e",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "3175:9:30",
                          "type": "",
                          "value": "unction"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3148:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3148:37:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3148:37:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "3194:27:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3206:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3217:3:30",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "3202:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3202:19:30"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3194:4:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "2975:9:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "2989:4:30",
                  "type": ""
                }
              ],
              "src": "2824:403:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3310:199:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3356:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3365:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3368:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "3358:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3358:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3358:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "3331:7:30"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3340:9:30"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3327:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3327:23:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3352:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "3323:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3323:32:30"
                    },
                    "nodeType": "YulIf",
                    "src": "3320:52:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "3381:29:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3400:9:30"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "3394:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3394:16:30"
                    },
                    "variables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3385:5:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3463:16:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3472:1:30",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3475:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "3465:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3465:12:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3465:12:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "3432:5:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "3453:5:30"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "3446:6:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3446:13:30"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "3439:6:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3439:21:30"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "3429:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3429:32:30"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "3422:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3422:40:30"
                    },
                    "nodeType": "YulIf",
                    "src": "3419:60:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "3488:15:30",
                    "value": {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3498:5:30"
                    },
                    "variableNames": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3488:6:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_bool_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "3276:9:30",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "3287:7:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "3299:6:30",
                  "type": ""
                }
              ],
              "src": "3232:277:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3688:244:30",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3705:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3716:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3698:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3698:21:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3698:21:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3739:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3750:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3735:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3735:18:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3755:2:30",
                          "type": "",
                          "value": "54"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3728:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3728:30:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3728:30:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3778:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3789:2:30",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3774:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3774:18:30"
                        },
                        {
                          "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c69",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "3794:34:30",
                          "type": "",
                          "value": "You give the wrong order of poli"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3767:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3767:62:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3767:62:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3849:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3860:2:30",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3845:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3845:18:30"
                        },
                        {
                          "hexValue": "6379546f6b656e20616e6420737461626c65636f696e",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "3865:24:30",
                          "type": "",
                          "value": "cyToken and stablecoin"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3838:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3838:52:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3838:52:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "3899:27:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3911:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3922:3:30",
                          "type": "",
                          "value": "128"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "3907:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3907:19:30"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3899:4:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "3665:9:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "3679:4:30",
                  "type": ""
                }
              ],
              "src": "3514:418:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3990:205:30",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "4000:10:30",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "4009:1:30",
                      "type": "",
                      "value": "0"
                    },
                    "variables": [
                      {
                        "name": "i",
                        "nodeType": "YulTypedName",
                        "src": "4004:1:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4069:63:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "4094:3:30"
                                  },
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4099:1:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4090:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4090:11:30"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "4113:3:30"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4118:1:30"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4109:3:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4109:11:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4103:5:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4103:18:30"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4083:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4083:39:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4083:39:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "i",
                          "nodeType": "YulIdentifier",
                          "src": "4030:1:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "4033:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "lt",
                        "nodeType": "YulIdentifier",
                        "src": "4027:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4027:13:30"
                    },
                    "nodeType": "YulForLoop",
                    "post": {
                      "nodeType": "YulBlock",
                      "src": "4041:19:30",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4043:15:30",
                          "value": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "4052:1:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4055:2:30",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4048:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4048:10:30"
                          },
                          "variableNames": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4043:1:30"
                            }
                          ]
                        }
                      ]
                    },
                    "pre": {
                      "nodeType": "YulBlock",
                      "src": "4023:3:30",
                      "statements": []
                    },
                    "src": "4019:113:30"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4158:31:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "4171:3:30"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4176:6:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4167:3:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4167:16:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4185:1:30",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4160:6:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4160:27:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4160:27:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "i",
                          "nodeType": "YulIdentifier",
                          "src": "4147:1:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "4150:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "4144:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4144:13:30"
                    },
                    "nodeType": "YulIf",
                    "src": "4141:48:30"
                  }
                ]
              },
              "name": "copy_memory_to_memory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "src",
                  "nodeType": "YulTypedName",
                  "src": "3968:3:30",
                  "type": ""
                },
                {
                  "name": "dst",
                  "nodeType": "YulTypedName",
                  "src": "3973:3:30",
                  "type": ""
                },
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "3978:6:30",
                  "type": ""
                }
              ],
              "src": "3937:258:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4387:283:30",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "4397:27:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4417:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "4411:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4411:13:30"
                    },
                    "variables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "4401:6:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4459:6:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4467:4:30",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4455:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4455:17:30"
                        },
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "4474:3:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "4479:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulIdentifier",
                        "src": "4433:21:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4433:53:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4433:53:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "4495:29:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "4512:3:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "4517:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "4508:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4508:16:30"
                    },
                    "variables": [
                      {
                        "name": "end_1",
                        "nodeType": "YulTypedName",
                        "src": "4499:5:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "4533:29:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4555:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "4549:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4549:13:30"
                    },
                    "variables": [
                      {
                        "name": "length_1",
                        "nodeType": "YulTypedName",
                        "src": "4537:8:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "4597:6:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4605:4:30",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4593:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4593:17:30"
                        },
                        {
                          "name": "end_1",
                          "nodeType": "YulIdentifier",
                          "src": "4612:5:30"
                        },
                        {
                          "name": "length_1",
                          "nodeType": "YulIdentifier",
                          "src": "4619:8:30"
                        }
                      ],
                      "functionName": {
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulIdentifier",
                        "src": "4571:21:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4571:57:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4571:57:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "4637:27:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "end_1",
                          "nodeType": "YulIdentifier",
                          "src": "4648:5:30"
                        },
                        {
                          "name": "length_1",
                          "nodeType": "YulIdentifier",
                          "src": "4655:8:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "4644:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4644:20:30"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "4637:3:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "4355:3:30",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "4360:6:30",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "4368:6:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "4379:3:30",
                  "type": ""
                }
              ],
              "src": "4200:470:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4832:218:30",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "4842:26:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "4854:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4865:2:30",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "4850:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4850:18:30"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4842:4:30"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "4877:29:30",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4895:3:30",
                              "type": "",
                              "value": "160"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4900:1:30",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "shl",
                            "nodeType": "YulIdentifier",
                            "src": "4891:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4891:11:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4904:1:30",
                          "type": "",
                          "value": "1"
                        }
                      ],
                      "functionName": {
                        "name": "sub",
                        "nodeType": "YulIdentifier",
                        "src": "4887:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4887:19:30"
                    },
                    "variables": [
                      {
                        "name": "_1",
                        "nodeType": "YulTypedName",
                        "src": "4881:2:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "4922:9:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4937:6:30"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4945:2:30"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4933:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4933:15:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4915:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4915:34:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4915:34:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "4969:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4980:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4965:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4965:18:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "4989:6:30"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4997:2:30"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4985:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4985:15:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4958:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4958:43:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4958:43:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5021:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5032:2:30",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5017:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5017:18:30"
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5037:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5010:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5010:34:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5010:34:30"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "4785:9:30",
                  "type": ""
                },
                {
                  "name": "value2",
                  "nodeType": "YulTypedName",
                  "src": "4796:6:30",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "4804:6:30",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "4812:6:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "4823:4:30",
                  "type": ""
                }
              ],
              "src": "4675:375:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5194:137:30",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "5204:27:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5224:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "5218:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5218:13:30"
                    },
                    "variables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "5208:6:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5266:6:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5274:4:30",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5262:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5262:17:30"
                        },
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "5281:3:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "5286:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulIdentifier",
                        "src": "5240:21:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5240:53:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5240:53:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "5302:23:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "5313:3:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "5318:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5309:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5309:16:30"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5302:3:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "5170:3:30",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "5175:6:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "5186:3:30",
                  "type": ""
                }
              ],
              "src": "5055:276:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5383:88:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5414:22:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "5416:16:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5416:18:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5416:18:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "5399:5:30"
                        },
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5410:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "not",
                            "nodeType": "YulIdentifier",
                            "src": "5406:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5406:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "eq",
                        "nodeType": "YulIdentifier",
                        "src": "5396:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5396:17:30"
                    },
                    "nodeType": "YulIf",
                    "src": "5393:43:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "5445:20:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "5456:5:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5463:1:30",
                          "type": "",
                          "value": "1"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5452:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5452:13:30"
                    },
                    "variableNames": [
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "5445:3:30"
                      }
                    ]
                  }
                ]
              },
              "name": "increment_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "5365:5:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "ret",
                  "nodeType": "YulTypedName",
                  "src": "5375:3:30",
                  "type": ""
                }
              ],
              "src": "5336:135:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5526:208:30",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "5536:26:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "5556:5:30"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "5550:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5550:12:30"
                    },
                    "variables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "5540:6:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "5578:3:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "5583:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5571:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5571:19:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5571:19:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "5625:5:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5632:4:30",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5621:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5621:16:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5643:3:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5648:4:30",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5639:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5639:14:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "5655:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulIdentifier",
                        "src": "5599:21:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5599:63:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5599:63:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "5671:57:30",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5686:3:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "5699:6:30"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5707:2:30",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5695:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5695:15:30"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5716:2:30",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "5712:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5712:7:30"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5691:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5691:29:30"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5682:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5682:39:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5723:4:30",
                          "type": "",
                          "value": "0x20"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5678:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5678:50:30"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5671:3:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_string",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "5503:5:30",
                  "type": ""
                },
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "5510:3:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "5518:3:30",
                  "type": ""
                }
              ],
              "src": "5476:258:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5936:283:30",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5953:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5964:2:30",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5946:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5946:21:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5946:21:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "5976:59:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6008:6:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6020:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6031:2:30",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6016:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6016:18:30"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_string",
                        "nodeType": "YulIdentifier",
                        "src": "5990:17:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5990:45:30"
                    },
                    "variables": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulTypedName",
                        "src": "5980:6:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6055:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6066:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6051:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6051:18:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail_1",
                              "nodeType": "YulIdentifier",
                              "src": "6075:6:30"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6083:9:30"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "6071:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6071:22:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6044:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6044:50:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6044:50:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "6103:41:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6129:6:30"
                        },
                        {
                          "name": "tail_1",
                          "nodeType": "YulIdentifier",
                          "src": "6137:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_string",
                        "nodeType": "YulIdentifier",
                        "src": "6111:17:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6111:33:30"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6103:4:30"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6164:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6175:2:30",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6160:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6160:18:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "6184:6:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6200:3:30",
                                      "type": "",
                                      "value": "160"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6205:1:30",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "6196:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6196:11:30"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6209:1:30",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "6192:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6192:19:30"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6180:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6180:32:30"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6153:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6153:60:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6153:60:30"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "5889:9:30",
                  "type": ""
                },
                {
                  "name": "value2",
                  "nodeType": "YulTypedName",
                  "src": "5900:6:30",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "5908:6:30",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "5916:6:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "5927:4:30",
                  "type": ""
                }
              ],
              "src": "5739:480:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6407:283:30",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "6417:27:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6437:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "6431:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6431:13:30"
                    },
                    "variables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "6421:6:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6479:6:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6487:4:30",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6475:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6475:17:30"
                        },
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "6494:3:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "6499:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulIdentifier",
                        "src": "6453:21:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6453:53:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6453:53:30"
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "6515:29:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "6532:3:30"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "6537:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "6528:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6528:16:30"
                    },
                    "variables": [
                      {
                        "name": "end_1",
                        "nodeType": "YulTypedName",
                        "src": "6519:5:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "6553:29:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6575:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "6569:5:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6569:13:30"
                    },
                    "variables": [
                      {
                        "name": "length_1",
                        "nodeType": "YulTypedName",
                        "src": "6557:8:30",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "6617:6:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6625:4:30",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6613:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6613:17:30"
                        },
                        {
                          "name": "end_1",
                          "nodeType": "YulIdentifier",
                          "src": "6632:5:30"
                        },
                        {
                          "name": "length_1",
                          "nodeType": "YulIdentifier",
                          "src": "6639:8:30"
                        }
                      ],
                      "functionName": {
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulIdentifier",
                        "src": "6591:21:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6591:57:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6591:57:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "6657:27:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "end_1",
                          "nodeType": "YulIdentifier",
                          "src": "6668:5:30"
                        },
                        {
                          "name": "length_1",
                          "nodeType": "YulIdentifier",
                          "src": "6675:8:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "6664:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6664:20:30"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "6657:3:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "6375:3:30",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "6380:6:30",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "6388:6:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "6399:3:30",
                  "type": ""
                }
              ],
              "src": "6224:466:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6747:116:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6806:22:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "6808:16:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6808:18:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6808:18:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "6778:1:30"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "6771:6:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6771:9:30"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "6764:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6764:17:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "6786:1:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6797:1:30",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "6793:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6793:6:30"
                                },
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "6801:1:30"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "6789:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6789:14:30"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "6783:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6783:21:30"
                        }
                      ],
                      "functionName": {
                        "name": "and",
                        "nodeType": "YulIdentifier",
                        "src": "6760:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6760:45:30"
                    },
                    "nodeType": "YulIf",
                    "src": "6757:71:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "6837:20:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "6852:1:30"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "6855:1:30"
                        }
                      ],
                      "functionName": {
                        "name": "mul",
                        "nodeType": "YulIdentifier",
                        "src": "6848:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6848:9:30"
                    },
                    "variableNames": [
                      {
                        "name": "product",
                        "nodeType": "YulIdentifier",
                        "src": "6837:7:30"
                      }
                    ]
                  }
                ]
              },
              "name": "checked_mul_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "6726:1:30",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "6729:1:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "product",
                  "nodeType": "YulTypedName",
                  "src": "6735:7:30",
                  "type": ""
                }
              ],
              "src": "6695:168:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6916:80:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6943:22:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "6945:16:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6945:18:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6945:18:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "6932:1:30"
                        },
                        {
                          "arguments": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "6939:1:30"
                            }
                          ],
                          "functionName": {
                            "name": "not",
                            "nodeType": "YulIdentifier",
                            "src": "6935:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6935:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "6929:2:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6929:13:30"
                    },
                    "nodeType": "YulIf",
                    "src": "6926:39:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "6974:16:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "6985:1:30"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "6988:1:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "6981:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6981:9:30"
                    },
                    "variableNames": [
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "6974:3:30"
                      }
                    ]
                  }
                ]
              },
              "name": "checked_add_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "6899:1:30",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "6902:1:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "sum",
                  "nodeType": "YulTypedName",
                  "src": "6908:3:30",
                  "type": ""
                }
              ],
              "src": "6868:128:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "7048:89:30",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7075:22:30",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "7077:16:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7077:18:30"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7077:18:30"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "7068:5:30"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "7061:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7061:13:30"
                    },
                    "nodeType": "YulIf",
                    "src": "7058:39:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "7106:25:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "7117:5:30"
                        },
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7128:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "not",
                            "nodeType": "YulIdentifier",
                            "src": "7124:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7124:6:30"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "7113:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7113:18:30"
                    },
                    "variableNames": [
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "7106:3:30"
                      }
                    ]
                  }
                ]
              },
              "name": "decrement_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "7030:5:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "ret",
                  "nodeType": "YulTypedName",
                  "src": "7040:3:30",
                  "type": ""
                }
              ],
              "src": "7001:136:30"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "7316:182:30",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "7333:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7344:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7326:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7326:21:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7326:21:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7367:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7378:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7363:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7363:18:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7383:2:30",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7356:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7356:30:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7356:30:30"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7406:9:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7417:2:30",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7402:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7402:18:30"
                        },
                        {
                          "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "7422:34:30",
                          "type": "",
                          "value": "Strings: hex length insufficient"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7395:6:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7395:62:30"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7395:62:30"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "7466:26:30",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "7478:9:30"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7489:2:30",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "7474:3:30"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7474:18:30"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7466:4:30"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "7293:9:30",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "7307:4:30",
                  "type": ""
                }
              ],
              "src": "7142:356:30"
            }
          ]
        },
        "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Only feeToSetter can call this f\")\n        mstore(add(headStart, 96), \"unction\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"You give the wrong order of poli\")\n        mstore(add(headStart, 96), \"cyToken and stablecoin\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
        "id": 30,
        "language": "Yul",
        "name": "#utility.yul"
      }
    ],
    "sourceMap": "632:5498:14:-:0;;;1010:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1054:11;:26;;-1:-1:-1;;;;;;1054:26:14;-1:-1:-1;;;;;1054:26:14;;;;;;;;;;632:5498;;14:290:30;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:30;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:30:o;:::-;632:5498:14;;;;;;",
    "deployedSourceMap": "632:5498:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:20;;;;;-1:-1:-1;;;;;951:20:14;;;;;;-1:-1:-1;;;;;178:32:30;;;160:51;;148:2;133:18;951:20:14;;;;;;;;977:26;;;;;-1:-1:-1;;;;;977:26:14;;;2539:101;;;;;;:::i;:::-;2609:10;:24;;-1:-1:-1;;;;;;2609:24:14;-1:-1:-1;;;;;2609:24:14;;;;;;;;;;2539:101;;;1430:154;;;:::i;2950:114::-;;;;;;:::i;:::-;;:::i;3367:911::-;;;;;;:::i;:::-;;:::i;1832:486::-;;;;;;:::i;:::-;;:::i;919:25::-;;;;;-1:-1:-1;;;;;919:25:14;;;4468:420;;;;;;:::i;:::-;;:::i;890:22::-;;;;;;;;;2394:25:30;;;2382:2;2367:18;890:22:14;2248:177:30;2743:90:14;;;;;;:::i;:::-;;:::i;1430:154::-;1484:7;1503:20;1536:1;1526:7;;:11;;;;:::i;:::-;1503:34;;1554:9;1564:12;1554:23;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1554:23:14;;1430:154;-1:-1:-1;;1430:154:14:o;2950:114::-;1237:11;;-1:-1:-1;;;;;1237:11:14;1223:10;:25;1202:111;;;;-1:-1:-1;;;1202:111:14;;;;;;;:::i;:::-;;;;;;;;;3031:11:::1;:26:::0;;-1:-1:-1;;;;;;3031:26:14::1;-1:-1:-1::0;;;;;3031:26:14;;;::::1;::::0;;;::::1;::::0;;2950:114::o;3367:911::-;3554:10;;;3542:56;;-1:-1:-1;;;3542:56:14;;-1:-1:-1;;;;;178:32:30;;;3542:56:14;;;160:51:30;;;;3502:7:14;;3554:10;;;;3542:43;;133:18:30;;3542:56:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;3602:4;3542:64;3521:165;;;;-1:-1:-1;;;3521:165:14;;3716:2:30;3521:165:14;;;3698:21:30;3755:2;3735:18;;;3728:30;3794:34;3774:18;;;3767:62;-1:-1:-1;;;3845:18:30;;;3838:52;3907:19;;3521:165:14;3514:418:30;3521:165:14;3697:21;3721:30;;;;;;;;:::i;:::-;-1:-1:-1;;3721:30:14;;;;;;;;;;;;;;;-1:-1:-1;3762:12:14;3834:36;3850:19;3834:15;:36::i;:::-;3888:28;3904:11;3888:15;:28::i;:::-;3800:130;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3777:163;;;;;;3762:178;;3951:20;3974:23;3982:8;3992:4;3974:7;:23::i;:::-;4008:128;;-1:-1:-1;;;4008:128:14;;-1:-1:-1;;;;;4933:15:30;;;4008:128:14;;;4915:34:30;4985:15;;;4965:18;;;4958:43;5017:18;;;5010:34;;;3951:46:14;;-1:-1:-1;4008:37:14;;;;;;4850:18:30;;4008:128:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;4147:28:14;;;:7;:28;;;;;;;;;;;:41;;;;;;;;;;:56;;;;;-1:-1:-1;;;;;;4147:56:14;;;;;;;;;4214:27;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4191:12:14;-1:-1:-1;;;3367:911:14;;;;;:::o;1832:486::-;2070:10;;;2058:72;;-1:-1:-1;;;2058:72:14;;-1:-1:-1;;;;;178:32:30;;;2058:72:14;;;160:51:30;;;;1949:7:14;;;;;;2070:10;;;2058:56;;133:18:30;;2058:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:166;;2193:14;2209;2058:166;;;2146:14;2162;2058:166;-1:-1:-1;;;;;2258:15:14;;;2235:20;2258:15;;;;;;;;;;;:23;;;;;;;;;;;;-1:-1:-1;;;1832:486:14;;;;;:::o;4468:420::-;4559:7;4582:12;4624:16;4607:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;4597:45;;;;;;4582:60;;4653:21;4677:40;4700:16;4677:22;:40::i;:::-;4653:64;;4728:26;4757:23;4765:8;4775:4;4757:7;:23::i;:::-;4791:9;:34;;;;;;;-1:-1:-1;4791:34:14;;;;;;;-1:-1:-1;;;;;;4791:34:14;-1:-1:-1;;;;;4791:34:14;;;;;4836:7;:9;;4791:34;;-1:-1:-1;4836:7:14;:9;;;:::i;:::-;;;;-1:-1:-1;4863:18:14;;4468:420;-1:-1:-1;;;;;4468:420:14:o;2743:90::-;1237:11;;-1:-1:-1;;;;;1237:11:14;1223:10;:25;1202:111;;;;-1:-1:-1;;;1202:111:14;;;;;;;:::i;:::-;2812:5:::1;:14:::0;;-1:-1:-1;;;;;;2812:14:14::1;-1:-1:-1::0;;;;;2812:14:14;;;::::1;::::0;;;::::1;::::0;;2743:90::o;5378:171::-;5465:13;5501:41;-1:-1:-1;;;;;5502:23:14;;5539:2;5501:37;:41::i;4954:291::-;5038:12;5138:4;5131;5125:11;5118:4;5112;5108:15;5105:1;5097:46;5089:54;;5178:4;5166:17;5156:73;;5213:1;5210;5203:12;5679:449;5784:12;5812:21;5836:30;;;;;;;;:::i;:::-;-1:-1:-1;;5836:30:14;;;;;;;;;;;;;;;;6096:10;;5836:30;;-1:-1:-1;5836:30:14;;6061:46;;6072:10;;;;-1:-1:-1;;;;;6096:10:14;;;;5836:30;6061:46;;:::i;:::-;;;;-1:-1:-1;;6061:46:14;;;;;;;;;;6001:120;;;6061:46;6001:120;;:::i;:::-;;;;;;;;;;;;;5982:139;;;5679:449;;;:::o;1535:441:8:-;1610:13;1635:19;1667:10;1671:6;1667:1;:10;:::i;:::-;:14;;1680:1;1667:14;:::i;:::-;1657:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:25:8;;1635:47;;-1:-1:-1;;;1692:6:8;1699:1;1692:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1692:15:8;;;;;;;;;-1:-1:-1;;;1717:6:8;1724:1;1717:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1717:15:8;;;;;;;;-1:-1:-1;1747:9:8;1759:10;1763:6;1759:1;:10;:::i;:::-;:14;;1772:1;1759:14;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;-1:-1:-1;;;1826:5:8;1834:3;1826:11;1813:25;;;;;;;:::i;:::-;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1801:37:8;;;;;;;;-1:-1:-1;1862:1:8;1852:11;;;;;1782:3;;;:::i;:::-;;;1742:132;;;-1:-1:-1;1891:10:8;;1883:55;;;;-1:-1:-1;;;1883:55:8;;7344:2:30;1883:55:8;;;7326:21:30;;;7363:18;;;7356:30;7422:34;7402:18;;;7395:62;7474:18;;1883:55:8;7142:356:30;1883:55:8;1962:6;1535:441;-1:-1:-1;;;1535:441:8:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;222:173:30:-;290:20;;-1:-1:-1;;;;;339:31:30;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:186::-;459:6;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;591:328::-;668:6;676;684;737:2;725:9;716:7;712:23;708:32;705:52;;;753:1;750;743:12;705:52;776:29;795:9;776:29;:::i;:::-;766:39;;824:38;858:2;847:9;843:18;824:38;:::i;:::-;814:48;;909:2;898:9;894:18;881:32;871:42;;591:328;;;;;:::o;924:260::-;992:6;1000;1053:2;1041:9;1032:7;1028:23;1024:32;1021:52;;;1069:1;1066;1059:12;1021:52;1092:29;1111:9;1092:29;:::i;:::-;1082:39;;1140:38;1174:2;1163:9;1159:18;1140:38;:::i;:::-;1130:48;;924:260;;;;;:::o;1189:127::-;1250:10;1245:3;1241:20;1238:1;1231:31;1281:4;1278:1;1271:15;1305:4;1302:1;1295:15;1321:922;1390:6;1443:2;1431:9;1422:7;1418:23;1414:32;1411:52;;;1459:1;1456;1449:12;1411:52;1499:9;1486:23;1528:18;1569:2;1561:6;1558:14;1555:34;;;1585:1;1582;1575:12;1555:34;1623:6;1612:9;1608:22;1598:32;;1668:7;1661:4;1657:2;1653:13;1649:27;1639:55;;1690:1;1687;1680:12;1639:55;1726:2;1713:16;1748:2;1744;1741:10;1738:36;;;1754:18;;:::i;:::-;1829:2;1823:9;1797:2;1883:13;;-1:-1:-1;;1879:22:30;;;1903:2;1875:31;1871:40;1859:53;;;1927:18;;;1947:22;;;1924:46;1921:72;;;1973:18;;:::i;:::-;2013:10;2009:2;2002:22;2048:2;2040:6;2033:18;2088:7;2083:2;2078;2074;2070:11;2066:20;2063:33;2060:53;;;2109:1;2106;2099:12;2060:53;2165:2;2160;2156;2152:11;2147:2;2139:6;2135:15;2122:46;2210:1;2188:15;;;2205:2;2184:24;2177:35;;;;-1:-1:-1;2192:6:30;1321:922;-1:-1:-1;;;;;1321:922:30:o;2430:127::-;2491:10;2486:3;2482:20;2479:1;2472:31;2522:4;2519:1;2512:15;2546:4;2543:1;2536:15;2562:125;2602:4;2630:1;2627;2624:8;2621:34;;;2635:18;;:::i;:::-;-1:-1:-1;2672:9:30;;2562:125::o;2692:127::-;2753:10;2748:3;2744:20;2741:1;2734:31;2784:4;2781:1;2774:15;2808:4;2805:1;2798:15;2824:403;3026:2;3008:21;;;3065:2;3045:18;;;3038:30;3104:34;3099:2;3084:18;;3077:62;-1:-1:-1;;;3170:2:30;3155:18;;3148:37;3217:3;3202:19;;2824:403::o;3232:277::-;3299:6;3352:2;3340:9;3331:7;3327:23;3323:32;3320:52;;;3368:1;3365;3358:12;3320:52;3400:9;3394:16;3453:5;3446:13;3439:21;3432:5;3429:32;3419:60;;3475:1;3472;3465:12;3937:258;4009:1;4019:113;4033:6;4030:1;4027:13;4019:113;;;4109:11;;;4103:18;4090:11;;;4083:39;4055:2;4048:10;4019:113;;;4150:6;4147:1;4144:13;4141:48;;;4185:1;4176:6;4171:3;4167:16;4160:27;4141:48;;3937:258;;;:::o;4200:470::-;4379:3;4417:6;4411:13;4433:53;4479:6;4474:3;4467:4;4459:6;4455:17;4433:53;:::i;:::-;4549:13;;4508:16;;;;4571:57;4549:13;4508:16;4605:4;4593:17;;4571:57;:::i;:::-;4644:20;;4200:470;-1:-1:-1;;;;4200:470:30:o;5055:276::-;5186:3;5224:6;5218:13;5240:53;5286:6;5281:3;5274:4;5266:6;5262:17;5240:53;:::i;:::-;5309:16;;;;;5055:276;-1:-1:-1;;5055:276:30:o;5336:135::-;5375:3;-1:-1:-1;;5396:17:30;;5393:43;;;5416:18;;:::i;:::-;-1:-1:-1;5463:1:30;5452:13;;5336:135::o;5476:258::-;5518:3;5556:5;5550:12;5583:6;5578:3;5571:19;5599:63;5655:6;5648:4;5643:3;5639:14;5632:4;5625:5;5621:16;5599:63;:::i;:::-;5716:2;5695:15;-1:-1:-1;;5691:29:30;5682:39;;;;5723:4;5678:50;;5476:258;-1:-1:-1;;5476:258:30:o;5739:480::-;5964:2;5953:9;5946:21;5927:4;5990:45;6031:2;6020:9;6016:18;6008:6;5990:45;:::i;:::-;6083:9;6075:6;6071:22;6066:2;6055:9;6051:18;6044:50;6111:33;6137:6;6129;6111:33;:::i;:::-;6103:41;;;6209:1;6205;6200:3;6196:11;6192:19;6184:6;6180:32;6175:2;6164:9;6160:18;6153:60;5739:480;;;;;;:::o;6695:168::-;6735:7;6801:1;6797;6793:6;6789:14;6786:1;6783:21;6778:1;6771:9;6764:17;6760:45;6757:71;;;6808:18;;:::i;:::-;-1:-1:-1;6848:9:30;;6695:168::o;6868:128::-;6908:3;6939:1;6935:6;6932:1;6929:13;6926:39;;;6945:18;;:::i;:::-;-1:-1:-1;6981:9:30;;6868:128::o;7001:136::-;7040:3;7068:5;7058:39;;7077:18;;:::i;:::-;-1:-1:-1;;;7113:18:30;;7001:136::o",
    "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"./PolicyToken.sol\";\nimport \"./NaughtyPair.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./interfaces/INaughtyPair.sol\";\nimport \"./interfaces/INaughtyFactory.sol\";\nimport \"./interfaces/IPolicyCore.sol\";\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title Naughty Factory\n * @dev Factory contract to deploy new pools periodically\n *      Each pool(product) will have a unique naughtyId\n *      Each pool will have its pool token\n *      PolicyToken - Stablecoin\n *      Token 0 may change but Token 1 is always stablecoin.\n */\n\ncontract NaughtyFactory is INaughtyFactory {\n    using Strings for uint256;\n\n    // PolicyToken Address => StableCoin Address => Pool Address\n    mapping(address => mapping(address => address)) getPair;\n\n    address[] allPairs;\n    address[] allTokens;\n\n    uint256 public _nextId;\n\n    address public policyCore;\n\n    address public feeTo;\n    address public feeToSetter;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    /**\n     * @notice Only feeToSetter can call some functions\n     */\n    modifier onlyFeeToSetter() {\n        require(\n            msg.sender == feeToSetter,\n            \"Only feeToSetter can call this function\"\n        );\n        _;\n    }\n\n    /**\n     * @notice Next token to be deployed\n     * @return Latest token address\n     */\n    function getLatestTokenAddress() public view returns (address) {\n        uint256 currentToken = _nextId - 1;\n        return allTokens[currentToken];\n    }\n\n    /**\n     * @notice Get the pair address deployed by the factory\n     *         PolicyToken address first, and then stablecoin address\n     *         The order of the token not matters\n     * @return Pool address of the two tokens\n     */\n    function getPairAddress(address _tokenAddress1, address _tokenAddress2)\n        public\n        view\n        returns (address)\n    {\n        // Policy token address at the first place\n        (address token0, address token1) = IPolicyCore(policyCore)\n            .isStablecoinAddress(_tokenAddress2)\n            ? (_tokenAddress1, _tokenAddress2)\n            : (_tokenAddress2, _tokenAddress1);\n\n        address _pairAddress = getPair[token0][token1];\n\n        return _pairAddress;\n    }\n\n    /**\n     * @notice Remember to call this function to set the policyCore address\n     *         < PolicyCore should be the owner of policyToken >\n     * @param _policyCore: Address of policyCore contract\n     */\n    function setPolicyCoreAddress(address _policyCore) external {\n        policyCore = _policyCore;\n    }\n\n    /**\n     * @notice Set feeTo address\n     * @param _feeTo Address to receive the fee\n     */\n    function setFeeTo(address _feeTo) external onlyFeeToSetter {\n        feeTo = _feeTo;\n    }\n\n    /**\n     * @notice Set feeToSetter address\n     * @param _feeToSetter Address to control the feeTo\n     */\n    function setFeeToSetter(address _feeToSetter) external onlyFeeToSetter {\n        feeToSetter = _feeToSetter;\n    }\n\n    /**\n     * @notice After deploy the policytoken and get the address,\n     *         we deploy the policyToken - stablecoin pool contract\n     * @param _policyTokenAddress: Address of policy token\n     * @param _stablecoin: Address of the stable coin\n     * @return Address of the pool\n     */\n    function deployPool(\n        address _policyTokenAddress,\n        address _stablecoin,\n        uint256 _deadline\n    ) public returns (address) {\n        require(\n            IPolicyCore(policyCore).isStablecoinAddress(_stablecoin) == true,\n            \"You give the wrong order of policyToken and stablecoin\"\n        );\n\n        bytes memory bytecode = type(NaughtyPair).creationCode;\n\n        bytes32 salt = keccak256(\n            abi.encodePacked(\n                addressToString(_policyTokenAddress),\n                addressToString(_stablecoin)\n            )\n        );\n\n        address _poolAddress = _deploy(bytecode, salt);\n\n        INaughtyPair(_poolAddress).initialize(\n            _policyTokenAddress,\n            _stablecoin,\n            _deadline\n        );\n\n        getPair[_policyTokenAddress][_stablecoin] = _poolAddress;\n\n        allPairs.push(_poolAddress);\n\n        return _poolAddress;\n    }\n\n    /**\n     * @notice For each round we need to first create the policytoken(ERC20)\n     * @param _policyTokenName: Name of the policyToken\n     * @return PolicyToken address\n     */\n    function deployPolicyToken(string memory _policyTokenName)\n        public\n        returns (address)\n    {\n        bytes32 salt = keccak256(abi.encodePacked(_policyTokenName));\n\n        bytes memory bytecode = getPolicyTokenBytecode(_policyTokenName);\n\n        address _policTokenAddress = _deploy(bytecode, salt);\n\n        allTokens.push(_policTokenAddress);\n\n        _nextId++;\n\n        return _policTokenAddress;\n    }\n\n    /**\n     * @notice Deploy function with create2\n     */\n    function _deploy(bytes memory code, bytes32 salt)\n        internal\n        returns (address addr)\n    {\n        assembly {\n            addr := create2(0, add(code, 0x20), mload(code), salt)\n            if iszero(extcodesize(addr)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    /**\n     * @notice Transfer address to string\n     * @param _addr: Input address\n     * @return Output string form\n     */\n    function addressToString(address _addr)\n        internal\n        pure\n        returns (string memory)\n    {\n        return (uint256(uint160(_addr))).toHexString(20);\n    }\n\n    /**\n     * @notice Get the policyToken bytecode (with parameters)\n     * @param _tokenName: Name of policyToken\n     */\n    function getPolicyTokenBytecode(string memory _tokenName)\n        internal\n        view\n        returns (bytes memory)\n    {\n        bytes memory bytecode = type(PolicyToken).creationCode;\n\n        // Encodepacked the parameters\n        // The owner & minter is set to be the policyCore address\n        return\n            abi.encodePacked(\n                bytecode,\n                abi.encode(_tokenName, _tokenName, policyCore)\n            );\n    }\n}\n",
    "sourcePath": "/Users/ZZ/01_blockchain/NaughtyPrice-Contracts/contracts/NaughtyFactory.sol",
    "ast": {
      "absolutePath": "project:/contracts/NaughtyFactory.sol",
      "exportedSymbols": {
        "Address": [
          1331
        ],
        "Context": [
          1353
        ],
        "ERC20": [
          591
        ],
        "IERC20": [
          669
        ],
        "IERC20Metadata": [
          694
        ],
        "INaughtyFactory": [
          6679
        ],
        "INaughtyPair": [
          6745
        ],
        "IPolicyCore": [
          6918
        ],
        "IPolicyToken": [
          6949
        ],
        "NaughtyFactory": [
          3832
        ],
        "NaughtyPair": [
          4524
        ],
        "PRBMath": [
          3462
        ],
        "PRBMathSD59x18__AbsInputTooSmall": [
          1593
        ],
        "PRBMathSD59x18__CeilOverflow": [
          1598
        ],
        "PRBMathSD59x18__DivInputTooSmall": [
          1601
        ],
        "PRBMathSD59x18__DivOverflow": [
          1606
        ],
        "PRBMathSD59x18__Exp2InputTooBig": [
          1616
        ],
        "PRBMathSD59x18__ExpInputTooBig": [
          1611
        ],
        "PRBMathSD59x18__FloorUnderflow": [
          1621
        ],
        "PRBMathSD59x18__FromIntOverflow": [
          1626
        ],
        "PRBMathSD59x18__FromIntUnderflow": [
          1631
        ],
        "PRBMathSD59x18__GmNegativeProduct": [
          1638
        ],
        "PRBMathSD59x18__GmOverflow": [
          1645
        ],
        "PRBMathSD59x18__LogInputTooSmall": [
          1650
        ],
        "PRBMathSD59x18__MulInputTooSmall": [
          1653
        ],
        "PRBMathSD59x18__MulOverflow": [
          1658
        ],
        "PRBMathSD59x18__PowuOverflow": [
          1663
        ],
        "PRBMathSD59x18__SqrtNegativeInput": [
          1668
        ],
        "PRBMathSD59x18__SqrtOverflow": [
          1673
        ],
        "PRBMathUD60x18__AddOverflow": [
          1680
        ],
        "PRBMathUD60x18__CeilOverflow": [
          1685
        ],
        "PRBMathUD60x18__Exp2InputTooBig": [
          1695
        ],
        "PRBMathUD60x18__ExpInputTooBig": [
          1690
        ],
        "PRBMathUD60x18__FromUintOverflow": [
          1700
        ],
        "PRBMathUD60x18__GmOverflow": [
          1707
        ],
        "PRBMathUD60x18__LogInputTooSmall": [
          1712
        ],
        "PRBMathUD60x18__SqrtOverflow": [
          1717
        ],
        "PRBMathUD60x18__SubUnderflow": [
          1724
        ],
        "PRBMath__MulDivFixedPointOverflow": [
          1575
        ],
        "PRBMath__MulDivOverflow": [
          1582
        ],
        "PRBMath__MulDivSignedInputTooSmall": [
          1585
        ],
        "PRBMath__MulDivSignedOverflow": [
          1590
        ],
        "PolicyToken": [
          6334
        ],
        "PoolLPToken": [
          6380
        ],
        "SafeERC20": [
          918
        ],
        "Strings": [
          1556
        ]
      },
      "id": 3833,
      "license": "MIT",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 3502,
          "literals": [
            "solidity",
            "0.8",
            ".9"
          ],
          "nodeType": "PragmaDirective",
          "src": "32:22:14"
        },
        {
          "absolutePath": "project:/contracts/PolicyToken.sol",
          "file": "./PolicyToken.sol",
          "id": 3503,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 6335,
          "src": "56:27:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "project:/contracts/NaughtyPair.sol",
          "file": "./NaughtyPair.sol",
          "id": 3504,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 4525,
          "src": "84:27:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "id": 3505,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 670,
          "src": "113:56:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "project:/contracts/interfaces/INaughtyPair.sol",
          "file": "./interfaces/INaughtyPair.sol",
          "id": 3506,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 6746,
          "src": "170:39:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "project:/contracts/interfaces/INaughtyFactory.sol",
          "file": "./interfaces/INaughtyFactory.sol",
          "id": 3507,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 6680,
          "src": "210:42:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "project:/contracts/interfaces/IPolicyCore.sol",
          "file": "./interfaces/IPolicyCore.sol",
          "id": 3508,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 6919,
          "src": "253:38:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
          "file": "@openzeppelin/contracts/utils/Strings.sol",
          "id": 3509,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 1557,
          "src": "293:51:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 3511,
                "name": "INaughtyFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6679,
                "src": "659:15:14"
              },
              "id": 3512,
              "nodeType": "InheritanceSpecifier",
              "src": "659:15:14"
            }
          ],
          "canonicalName": "NaughtyFactory",
          "contractDependencies": [
            4524,
            6334
          ],
          "contractKind": "contract",
          "documentation": {
            "id": 3510,
            "nodeType": "StructuredDocumentation",
            "src": "346:284:14",
            "text": " @title Naughty Factory\n @dev Factory contract to deploy new pools periodically\n      Each pool(product) will have a unique naughtyId\n      Each pool will have its pool token\n      PolicyToken - Stablecoin\n      Token 0 may change but Token 1 is always stablecoin."
          },
          "fullyImplemented": true,
          "id": 3832,
          "linearizedBaseContracts": [
            3832,
            6679
          ],
          "name": "NaughtyFactory",
          "nameLocation": "641:14:14",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "id": 3515,
              "libraryName": {
                "id": 3513,
                "name": "Strings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1556,
                "src": "687:7:14"
              },
              "nodeType": "UsingForDirective",
              "src": "681:26:14",
              "typeName": {
                "id": 3514,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "699:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            {
              "constant": false,
              "id": 3521,
              "mutability": "mutable",
              "name": "getPair",
              "nameLocation": "826:7:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "778:55:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "typeName": {
                "id": 3520,
                "keyType": {
                  "id": 3516,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "786:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "778:47:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                  "typeString": "mapping(address => mapping(address => address))"
                },
                "valueType": {
                  "id": 3519,
                  "keyType": {
                    "id": 3517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "797:27:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "valueType": {
                    "id": 3518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 3524,
              "mutability": "mutable",
              "name": "allPairs",
              "nameLocation": "850:8:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "840:18:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                "typeString": "address[]"
              },
              "typeName": {
                "baseType": {
                  "id": 3522,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "840:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 3523,
                "nodeType": "ArrayTypeName",
                "src": "840:9:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 3527,
              "mutability": "mutable",
              "name": "allTokens",
              "nameLocation": "874:9:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "864:19:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                "typeString": "address[]"
              },
              "typeName": {
                "baseType": {
                  "id": 3525,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "864:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 3526,
                "nodeType": "ArrayTypeName",
                "src": "864:9:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "functionSelector": "f2f2fff5",
              "id": 3529,
              "mutability": "mutable",
              "name": "_nextId",
              "nameLocation": "905:7:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "890:22:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 3528,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "e30145e0",
              "id": 3531,
              "mutability": "mutable",
              "name": "policyCore",
              "nameLocation": "934:10:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "919:25:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 3530,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "919:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "baseFunctions": [
                6651
              ],
              "constant": false,
              "functionSelector": "017e7e58",
              "id": 3533,
              "mutability": "mutable",
              "name": "feeTo",
              "nameLocation": "966:5:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "951:20:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 3532,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "951:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "094b7415",
              "id": 3535,
              "mutability": "mutable",
              "name": "feeToSetter",
              "nameLocation": "992:11:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "977:26:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 3534,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "977:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "body": {
                "id": 3544,
                "nodeType": "Block",
                "src": "1044:43:14",
                "statements": [
                  {
                    "expression": {
                      "id": 3542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3540,
                        "name": "feeToSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3535,
                        "src": "1054:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3541,
                        "name": "_feeToSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3537,
                        "src": "1068:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1054:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3543,
                    "nodeType": "ExpressionStatement",
                    "src": "1054:26:14"
                  }
                ]
              },
              "id": 3545,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3538,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3537,
                    "mutability": "mutable",
                    "name": "_feeToSetter",
                    "nameLocation": "1030:12:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3545,
                    "src": "1022:20:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3536,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1022:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1021:22:14"
              },
              "returnParameters": {
                "id": 3539,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1044:0:14"
              },
              "scope": 3832,
              "src": "1010:77:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3557,
                "nodeType": "Block",
                "src": "1192:139:14",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3549,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1223:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1223:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3551,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3535,
                            "src": "1237:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1223:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066756e6374696f6e",
                          "id": 3553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1262:41:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                            "typeString": "literal_string \"Only feeToSetter can call this function\""
                          },
                          "value": "Only feeToSetter can call this function"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                            "typeString": "literal_string \"Only feeToSetter can call this function\""
                          }
                        ],
                        "id": 3548,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "1202:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 3554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1202:111:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3555,
                    "nodeType": "ExpressionStatement",
                    "src": "1202:111:14"
                  },
                  {
                    "id": 3556,
                    "nodeType": "PlaceholderStatement",
                    "src": "1323:1:14"
                  }
                ]
              },
              "documentation": {
                "id": 3546,
                "nodeType": "StructuredDocumentation",
                "src": "1093:67:14",
                "text": " @notice Only feeToSetter can call some functions"
              },
              "id": 3558,
              "name": "onlyFeeToSetter",
              "nameLocation": "1174:15:14",
              "nodeType": "ModifierDefinition",
              "parameters": {
                "id": 3547,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1189:2:14"
              },
              "src": "1165:166:14",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 3574,
                "nodeType": "Block",
                "src": "1493:91:14",
                "statements": [
                  {
                    "assignments": [
                      3565
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3565,
                        "mutability": "mutable",
                        "name": "currentToken",
                        "nameLocation": "1511:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3574,
                        "src": "1503:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3564,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1503:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3569,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3566,
                        "name": "_nextId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3529,
                        "src": "1526:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 3567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1536:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1526:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1503:34:14"
                  },
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 3570,
                        "name": "allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "1554:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3572,
                      "indexExpression": {
                        "id": 3571,
                        "name": "currentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3565,
                        "src": "1564:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1554:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 3563,
                    "id": 3573,
                    "nodeType": "Return",
                    "src": "1547:30:14"
                  }
                ]
              },
              "documentation": {
                "id": 3559,
                "nodeType": "StructuredDocumentation",
                "src": "1337:88:14",
                "text": " @notice Next token to be deployed\n @return Latest token address"
              },
              "functionSelector": "9fd2650e",
              "id": 3575,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getLatestTokenAddress",
              "nameLocation": "1439:21:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3560,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1460:2:14"
              },
              "returnParameters": {
                "id": 3563,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3562,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3575,
                    "src": "1484:7:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3561,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1484:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1483:9:14"
              },
              "scope": 3832,
              "src": "1430:154:14",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                6660
              ],
              "body": {
                "id": 3613,
                "nodeType": "Block",
                "src": "1962:356:14",
                "statements": [
                  {
                    "assignments": [
                      3586,
                      3588
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3586,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "2032:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3613,
                        "src": "2024:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2024:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3588,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "2048:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3613,
                        "src": "2040:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2040:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3602,
                    "initialValue": {
                      "condition": {
                        "arguments": [
                          {
                            "id": 3593,
                            "name": "_tokenAddress2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3580,
                            "src": "2115:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3590,
                                "name": "policyCore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3531,
                                "src": "2070:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3589,
                              "name": "IPolicyCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6918,
                              "src": "2058:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$6918_$",
                                "typeString": "type(contract IPolicyCore)"
                              }
                            },
                            "id": 3591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2058:23:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPolicyCore_$6918",
                              "typeString": "contract IPolicyCore"
                            }
                          },
                          "id": 3592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStablecoinAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6862,
                          "src": "2058:56:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2058:72:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "id": 3598,
                            "name": "_tokenAddress2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3580,
                            "src": "2193:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3599,
                            "name": "_tokenAddress1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3578,
                            "src": "2209:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 3600,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2192:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "id": 3601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2058:166:14",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 3595,
                            "name": "_tokenAddress1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3578,
                            "src": "2146:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3596,
                            "name": "_tokenAddress2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3580,
                            "src": "2162:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 3597,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2145:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2023:201:14"
                  },
                  {
                    "assignments": [
                      3604
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3604,
                        "mutability": "mutable",
                        "name": "_pairAddress",
                        "nameLocation": "2243:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3613,
                        "src": "2235:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3603,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2235:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3610,
                    "initialValue": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3605,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3521,
                          "src": "2258:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 3607,
                        "indexExpression": {
                          "id": 3606,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3586,
                          "src": "2266:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2258:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3609,
                      "indexExpression": {
                        "id": 3608,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3588,
                        "src": "2274:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2258:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2235:46:14"
                  },
                  {
                    "expression": {
                      "id": 3611,
                      "name": "_pairAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3604,
                      "src": "2299:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 3584,
                    "id": 3612,
                    "nodeType": "Return",
                    "src": "2292:19:14"
                  }
                ]
              },
              "documentation": {
                "id": 3576,
                "nodeType": "StructuredDocumentation",
                "src": "1590:237:14",
                "text": " @notice Get the pair address deployed by the factory\n         PolicyToken address first, and then stablecoin address\n         The order of the token not matters\n @return Pool address of the two tokens"
              },
              "functionSelector": "b4f69a2f",
              "id": 3614,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getPairAddress",
              "nameLocation": "1841:14:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3581,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3578,
                    "mutability": "mutable",
                    "name": "_tokenAddress1",
                    "nameLocation": "1864:14:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3614,
                    "src": "1856:22:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3577,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1856:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3580,
                    "mutability": "mutable",
                    "name": "_tokenAddress2",
                    "nameLocation": "1888:14:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3614,
                    "src": "1880:22:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3579,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1880:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1855:48:14"
              },
              "returnParameters": {
                "id": 3584,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3583,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3614,
                    "src": "1949:7:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3582,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1949:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1948:9:14"
              },
              "scope": 3832,
              "src": "1832:486:14",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3624,
                "nodeType": "Block",
                "src": "2599:41:14",
                "statements": [
                  {
                    "expression": {
                      "id": 3622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3620,
                        "name": "policyCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3531,
                        "src": "2609:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3621,
                        "name": "_policyCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "2622:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2609:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3623,
                    "nodeType": "ExpressionStatement",
                    "src": "2609:24:14"
                  }
                ]
              },
              "documentation": {
                "id": 3615,
                "nodeType": "StructuredDocumentation",
                "src": "2324:210:14",
                "text": " @notice Remember to call this function to set the policyCore address\n         < PolicyCore should be the owner of policyToken >\n @param _policyCore: Address of policyCore contract"
              },
              "functionSelector": "61c8f99d",
              "id": 3625,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "setPolicyCoreAddress",
              "nameLocation": "2548:20:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3618,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3617,
                    "mutability": "mutable",
                    "name": "_policyCore",
                    "nameLocation": "2577:11:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3625,
                    "src": "2569:19:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3616,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2569:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2568:21:14"
              },
              "returnParameters": {
                "id": 3619,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2599:0:14"
              },
              "scope": 3832,
              "src": "2539:101:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3637,
                "nodeType": "Block",
                "src": "2802:31:14",
                "statements": [
                  {
                    "expression": {
                      "id": 3635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3633,
                        "name": "feeTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "2812:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3634,
                        "name": "_feeTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3628,
                        "src": "2820:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2812:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3636,
                    "nodeType": "ExpressionStatement",
                    "src": "2812:14:14"
                  }
                ]
              },
              "documentation": {
                "id": 3626,
                "nodeType": "StructuredDocumentation",
                "src": "2646:92:14",
                "text": " @notice Set feeTo address\n @param _feeTo Address to receive the fee"
              },
              "functionSelector": "f46901ed",
              "id": 3638,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 3631,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 3630,
                    "name": "onlyFeeToSetter",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3558,
                    "src": "2786:15:14"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2786:15:14"
                }
              ],
              "name": "setFeeTo",
              "nameLocation": "2752:8:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3629,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3628,
                    "mutability": "mutable",
                    "name": "_feeTo",
                    "nameLocation": "2769:6:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3638,
                    "src": "2761:14:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3627,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2761:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2760:16:14"
              },
              "returnParameters": {
                "id": 3632,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2802:0:14"
              },
              "scope": 3832,
              "src": "2743:90:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3650,
                "nodeType": "Block",
                "src": "3021:43:14",
                "statements": [
                  {
                    "expression": {
                      "id": 3648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3646,
                        "name": "feeToSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3535,
                        "src": "3031:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3647,
                        "name": "_feeToSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3641,
                        "src": "3045:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3031:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3649,
                    "nodeType": "ExpressionStatement",
                    "src": "3031:26:14"
                  }
                ]
              },
              "documentation": {
                "id": 3639,
                "nodeType": "StructuredDocumentation",
                "src": "2839:106:14",
                "text": " @notice Set feeToSetter address\n @param _feeToSetter Address to control the feeTo"
              },
              "functionSelector": "a2e74af6",
              "id": 3651,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 3644,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 3643,
                    "name": "onlyFeeToSetter",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3558,
                    "src": "3005:15:14"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "3005:15:14"
                }
              ],
              "name": "setFeeToSetter",
              "nameLocation": "2959:14:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3642,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3641,
                    "mutability": "mutable",
                    "name": "_feeToSetter",
                    "nameLocation": "2982:12:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3651,
                    "src": "2974:20:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3640,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2974:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2973:22:14"
              },
              "returnParameters": {
                "id": 3645,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3021:0:14"
              },
              "scope": 3832,
              "src": "2950:114:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "baseFunctions": [
                6678
              ],
              "body": {
                "id": 3728,
                "nodeType": "Block",
                "src": "3511:767:14",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 3668,
                                "name": "_stablecoin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3656,
                                "src": "3586:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3665,
                                    "name": "policyCore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3531,
                                    "src": "3554:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3664,
                                  "name": "IPolicyCore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6918,
                                  "src": "3542:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$6918_$",
                                    "typeString": "type(contract IPolicyCore)"
                                  }
                                },
                                "id": 3666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3542:23:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPolicyCore_$6918",
                                  "typeString": "contract IPolicyCore"
                                }
                              },
                              "id": 3667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isStablecoinAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6862,
                              "src": "3542:43:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view external returns (bool)"
                              }
                            },
                            "id": 3669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3542:56:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 3670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3602:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3542:64:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c696379546f6b656e20616e6420737461626c65636f696e",
                          "id": 3672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3620:56:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                            "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                          },
                          "value": "You give the wrong order of policyToken and stablecoin"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                            "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                          }
                        ],
                        "id": 3663,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3521:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 3673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3521:165:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3674,
                    "nodeType": "ExpressionStatement",
                    "src": "3521:165:14"
                  },
                  {
                    "assignments": [
                      3676
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3676,
                        "mutability": "mutable",
                        "name": "bytecode",
                        "nameLocation": "3710:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "3697:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3675,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3697:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3681,
                    "initialValue": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3678,
                            "name": "NaughtyPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4524,
                            "src": "3726:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4524_$",
                              "typeString": "type(contract NaughtyPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4524_$",
                              "typeString": "type(contract NaughtyPair)"
                            }
                          ],
                          "id": 3677,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "3721:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 3679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3721:17:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_NaughtyPair_$4524",
                          "typeString": "type(contract NaughtyPair)"
                        }
                      },
                      "id": 3680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "3721:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3697:54:14"
                  },
                  {
                    "assignments": [
                      3683
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3683,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "3770:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "3762:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3682,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3762:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3695,
                    "initialValue": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3688,
                                  "name": "_policyTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3654,
                                  "src": "3850:19:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3687,
                                "name": "addressToString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3804,
                                "src": "3834:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (address) pure returns (string memory)"
                                }
                              },
                              "id": 3689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3834:36:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3691,
                                  "name": "_stablecoin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3656,
                                  "src": "3904:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3690,
                                "name": "addressToString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3804,
                                "src": "3888:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (address) pure returns (string memory)"
                                }
                              },
                              "id": 3692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3888:28:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 3685,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "3800:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3800:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3800:130:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3684,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "3777:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3777:163:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3762:178:14"
                  },
                  {
                    "assignments": [
                      3697
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3697,
                        "mutability": "mutable",
                        "name": "_poolAddress",
                        "nameLocation": "3959:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "3951:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3951:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3702,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 3699,
                          "name": "bytecode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3676,
                          "src": "3982:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 3700,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3683,
                          "src": "3992:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 3698,
                        "name": "_deploy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3783,
                        "src": "3974:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes memory,bytes32) returns (address)"
                        }
                      },
                      "id": 3701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3974:23:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3951:46:14"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3707,
                          "name": "_policyTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3654,
                          "src": "4059:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3708,
                          "name": "_stablecoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3656,
                          "src": "4092:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3709,
                          "name": "_deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3658,
                          "src": "4117:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3704,
                              "name": "_poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3697,
                              "src": "4021:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3703,
                            "name": "INaughtyPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6745,
                            "src": "4008:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INaughtyPair_$6745_$",
                              "typeString": "type(contract INaughtyPair)"
                            }
                          },
                          "id": 3705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4008:26:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INaughtyPair_$6745",
                            "typeString": "contract INaughtyPair"
                          }
                        },
                        "id": 3706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6744,
                        "src": "4008:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256) external"
                        }
                      },
                      "id": 3710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4008:128:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3711,
                    "nodeType": "ExpressionStatement",
                    "src": "4008:128:14"
                  },
                  {
                    "expression": {
                      "id": 3718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 3712,
                            "name": "getPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3521,
                            "src": "4147:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                              "typeString": "mapping(address => mapping(address => address))"
                            }
                          },
                          "id": 3715,
                          "indexExpression": {
                            "id": 3713,
                            "name": "_policyTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3654,
                            "src": "4155:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4147:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 3716,
                        "indexExpression": {
                          "id": 3714,
                          "name": "_stablecoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3656,
                          "src": "4176:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "4147:41:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3717,
                        "name": "_poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3697,
                        "src": "4191:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4147:56:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3719,
                    "nodeType": "ExpressionStatement",
                    "src": "4147:56:14"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3723,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3697,
                          "src": "4228:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 3720,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3524,
                          "src": "4214:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 3722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "4214:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                          "typeString": "function (address[] storage pointer,address)"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4214:27:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3725,
                    "nodeType": "ExpressionStatement",
                    "src": "4214:27:14"
                  },
                  {
                    "expression": {
                      "id": 3726,
                      "name": "_poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3697,
                      "src": "4259:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 3662,
                    "id": 3727,
                    "nodeType": "Return",
                    "src": "4252:19:14"
                  }
                ]
              },
              "documentation": {
                "id": 3652,
                "nodeType": "StructuredDocumentation",
                "src": "3070:292:14",
                "text": " @notice After deploy the policytoken and get the address,\n         we deploy the policyToken - stablecoin pool contract\n @param _policyTokenAddress: Address of policy token\n @param _stablecoin: Address of the stable coin\n @return Address of the pool"
              },
              "functionSelector": "a3232bf3",
              "id": 3729,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "deployPool",
              "nameLocation": "3376:10:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3659,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3654,
                    "mutability": "mutable",
                    "name": "_policyTokenAddress",
                    "nameLocation": "3404:19:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3729,
                    "src": "3396:27:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3653,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3396:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3656,
                    "mutability": "mutable",
                    "name": "_stablecoin",
                    "nameLocation": "3441:11:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3729,
                    "src": "3433:19:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3655,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3433:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3658,
                    "mutability": "mutable",
                    "name": "_deadline",
                    "nameLocation": "3470:9:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3729,
                    "src": "3462:17:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 3657,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3462:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3386:99:14"
              },
              "returnParameters": {
                "id": 3662,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3661,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3729,
                    "src": "3502:7:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3660,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3502:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3501:9:14"
              },
              "scope": 3832,
              "src": "3367:911:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                6667
              ],
              "body": {
                "id": 3770,
                "nodeType": "Block",
                "src": "4572:316:14",
                "statements": [
                  {
                    "assignments": [
                      3738
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3738,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "4590:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3770,
                        "src": "4582:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3737,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4582:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3745,
                    "initialValue": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3742,
                              "name": "_policyTokenName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3732,
                              "src": "4624:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 3740,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "4607:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "4607:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4607:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3739,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "4597:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4597:45:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4582:60:14"
                  },
                  {
                    "assignments": [
                      3747
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3747,
                        "mutability": "mutable",
                        "name": "bytecode",
                        "nameLocation": "4666:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3770,
                        "src": "4653:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3746,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4653:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3751,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 3749,
                          "name": "_policyTokenName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3732,
                          "src": "4700:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 3748,
                        "name": "getPolicyTokenBytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3831,
                        "src": "4677:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (string memory) view returns (bytes memory)"
                        }
                      },
                      "id": 3750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4677:40:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4653:64:14"
                  },
                  {
                    "assignments": [
                      3753
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3753,
                        "mutability": "mutable",
                        "name": "_policTokenAddress",
                        "nameLocation": "4736:18:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3770,
                        "src": "4728:26:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3758,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 3755,
                          "name": "bytecode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3747,
                          "src": "4765:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 3756,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3738,
                          "src": "4775:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 3754,
                        "name": "_deploy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3783,
                        "src": "4757:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes memory,bytes32) returns (address)"
                        }
                      },
                      "id": 3757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4757:23:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4728:52:14"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3762,
                          "name": "_policTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3753,
                          "src": "4806:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 3759,
                          "name": "allTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3527,
                          "src": "4791:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 3761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "4791:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                          "typeString": "function (address[] storage pointer,address)"
                        }
                      },
                      "id": 3763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4791:34:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3764,
                    "nodeType": "ExpressionStatement",
                    "src": "4791:34:14"
                  },
                  {
                    "expression": {
                      "id": 3766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4836:9:14",
                      "subExpression": {
                        "id": 3765,
                        "name": "_nextId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3529,
                        "src": "4836:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3767,
                    "nodeType": "ExpressionStatement",
                    "src": "4836:9:14"
                  },
                  {
                    "expression": {
                      "id": 3768,
                      "name": "_policTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3753,
                      "src": "4863:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 3736,
                    "id": 3769,
                    "nodeType": "Return",
                    "src": "4856:25:14"
                  }
                ]
              },
              "documentation": {
                "id": 3730,
                "nodeType": "StructuredDocumentation",
                "src": "4284:179:14",
                "text": " @notice For each round we need to first create the policytoken(ERC20)\n @param _policyTokenName: Name of the policyToken\n @return PolicyToken address"
              },
              "functionSelector": "f03c6132",
              "id": 3771,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "deployPolicyToken",
              "nameLocation": "4477:17:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3733,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3732,
                    "mutability": "mutable",
                    "name": "_policyTokenName",
                    "nameLocation": "4509:16:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3771,
                    "src": "4495:30:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3731,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "4495:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4494:32:14"
              },
              "returnParameters": {
                "id": 3736,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3735,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3771,
                    "src": "4559:7:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3734,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4559:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4558:9:14"
              },
              "scope": 3832,
              "src": "4468:420:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3782,
                "nodeType": "Block",
                "src": "5056:189:14",
                "statements": [
                  {
                    "AST": {
                      "nodeType": "YulBlock",
                      "src": "5075:164:14",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5089:54:14",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5105:1:14",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "5112:4:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5118:4:14",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5108:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5108:15:14"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "5131:4:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5125:5:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5125:11:14"
                              },
                              {
                                "name": "salt",
                                "nodeType": "YulIdentifier",
                                "src": "5138:4:14"
                              }
                            ],
                            "functionName": {
                              "name": "create2",
                              "nodeType": "YulIdentifier",
                              "src": "5097:7:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5097:46:14"
                          },
                          "variableNames": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "5089:4:14"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5185:44:14",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5210:1:14",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5213:1:14",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "5203:6:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5203:12:14"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5203:12:14"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5178:4:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "5166:11:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5166:17:14"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5159:6:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5159:25:14"
                          },
                          "nodeType": "YulIf",
                          "src": "5156:73:14"
                        }
                      ]
                    },
                    "evmVersion": "constantinople",
                    "externalReferences": [
                      {
                        "declaration": 3779,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5089:4:14",
                        "valueSize": 1
                      },
                      {
                        "declaration": 3779,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5178:4:14",
                        "valueSize": 1
                      },
                      {
                        "declaration": 3774,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5112:4:14",
                        "valueSize": 1
                      },
                      {
                        "declaration": 3774,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5131:4:14",
                        "valueSize": 1
                      },
                      {
                        "declaration": 3776,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5138:4:14",
                        "valueSize": 1
                      }
                    ],
                    "id": 3781,
                    "nodeType": "InlineAssembly",
                    "src": "5066:173:14"
                  }
                ]
              },
              "documentation": {
                "id": 3772,
                "nodeType": "StructuredDocumentation",
                "src": "4894:55:14",
                "text": " @notice Deploy function with create2"
              },
              "id": 3783,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_deploy",
              "nameLocation": "4963:7:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3777,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3774,
                    "mutability": "mutable",
                    "name": "code",
                    "nameLocation": "4984:4:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3783,
                    "src": "4971:17:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 3773,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4971:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3776,
                    "mutability": "mutable",
                    "name": "salt",
                    "nameLocation": "4998:4:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3783,
                    "src": "4990:12:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 3775,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4990:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4970:33:14"
              },
              "returnParameters": {
                "id": 3780,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3779,
                    "mutability": "mutable",
                    "name": "addr",
                    "nameLocation": "5046:4:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3783,
                    "src": "5038:12:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3778,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5038:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5037:14:14"
              },
              "scope": 3832,
              "src": "4954:291:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 3803,
                "nodeType": "Block",
                "src": "5484:65:14",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "3230",
                          "id": 3800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5539:2:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3795,
                                      "name": "_addr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3786,
                                      "src": "5518:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5510:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint160_$",
                                      "typeString": "type(uint160)"
                                    },
                                    "typeName": {
                                      "id": 3793,
                                      "name": "uint160",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5510:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5510:14:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 3792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5502:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 3791,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5502:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5502:23:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3798,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5501:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toHexString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1555,
                        "src": "5501:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (string memory)"
                        }
                      },
                      "id": 3801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5501:41:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "functionReturnParameters": 3790,
                    "id": 3802,
                    "nodeType": "Return",
                    "src": "5494:48:14"
                  }
                ]
              },
              "documentation": {
                "id": 3784,
                "nodeType": "StructuredDocumentation",
                "src": "5251:122:14",
                "text": " @notice Transfer address to string\n @param _addr: Input address\n @return Output string form"
              },
              "id": 3804,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "addressToString",
              "nameLocation": "5387:15:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3787,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3786,
                    "mutability": "mutable",
                    "name": "_addr",
                    "nameLocation": "5411:5:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3804,
                    "src": "5403:13:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3785,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5403:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5402:15:14"
              },
              "returnParameters": {
                "id": 3790,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3789,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3804,
                    "src": "5465:13:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3788,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5465:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5464:15:14"
              },
              "scope": 3832,
              "src": "5378:171:14",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 3830,
                "nodeType": "Block",
                "src": "5802:326:14",
                "statements": [
                  {
                    "assignments": [
                      3813
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3813,
                        "mutability": "mutable",
                        "name": "bytecode",
                        "nameLocation": "5825:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3830,
                        "src": "5812:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3812,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5812:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3818,
                    "initialValue": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3815,
                            "name": "PolicyToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6334,
                            "src": "5841:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PolicyToken_$6334_$",
                              "typeString": "type(contract PolicyToken)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_PolicyToken_$6334_$",
                              "typeString": "type(contract PolicyToken)"
                            }
                          ],
                          "id": 3814,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "5836:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 3816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5836:17:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_PolicyToken_$6334",
                          "typeString": "type(contract PolicyToken)"
                        }
                      },
                      "id": 3817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "5836:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5812:54:14"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3821,
                          "name": "bytecode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3813,
                          "src": "6035:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 3824,
                              "name": "_tokenName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3807,
                              "src": "6072:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3825,
                              "name": "_tokenName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3807,
                              "src": "6084:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3826,
                              "name": "policyCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3531,
                              "src": "6096:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3822,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "6061:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "6061:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6061:46:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 3819,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967295,
                          "src": "6001:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 3820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "src": "6001:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 3828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6001:120:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "functionReturnParameters": 3811,
                    "id": 3829,
                    "nodeType": "Return",
                    "src": "5982:139:14"
                  }
                ]
              },
              "documentation": {
                "id": 3805,
                "nodeType": "StructuredDocumentation",
                "src": "5555:119:14",
                "text": " @notice Get the policyToken bytecode (with parameters)\n @param _tokenName: Name of policyToken"
              },
              "id": 3831,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getPolicyTokenBytecode",
              "nameLocation": "5688:22:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3808,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3807,
                    "mutability": "mutable",
                    "name": "_tokenName",
                    "nameLocation": "5725:10:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3831,
                    "src": "5711:24:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3806,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5711:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5710:26:14"
              },
              "returnParameters": {
                "id": 3811,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3810,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3831,
                    "src": "5784:12:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 3809,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5784:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5783:14:14"
              },
              "scope": 3832,
              "src": "5679:449:14",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "scope": 3833,
          "src": "632:5498:14",
          "usedErrors": []
        }
      ],
      "src": "32:6099:14"
    },
    "legacyAST": {
      "absolutePath": "project:/contracts/NaughtyFactory.sol",
      "exportedSymbols": {
        "Address": [
          1331
        ],
        "Context": [
          1353
        ],
        "ERC20": [
          591
        ],
        "IERC20": [
          669
        ],
        "IERC20Metadata": [
          694
        ],
        "INaughtyFactory": [
          6679
        ],
        "INaughtyPair": [
          6745
        ],
        "IPolicyCore": [
          6918
        ],
        "IPolicyToken": [
          6949
        ],
        "NaughtyFactory": [
          3832
        ],
        "NaughtyPair": [
          4524
        ],
        "PRBMath": [
          3462
        ],
        "PRBMathSD59x18__AbsInputTooSmall": [
          1593
        ],
        "PRBMathSD59x18__CeilOverflow": [
          1598
        ],
        "PRBMathSD59x18__DivInputTooSmall": [
          1601
        ],
        "PRBMathSD59x18__DivOverflow": [
          1606
        ],
        "PRBMathSD59x18__Exp2InputTooBig": [
          1616
        ],
        "PRBMathSD59x18__ExpInputTooBig": [
          1611
        ],
        "PRBMathSD59x18__FloorUnderflow": [
          1621
        ],
        "PRBMathSD59x18__FromIntOverflow": [
          1626
        ],
        "PRBMathSD59x18__FromIntUnderflow": [
          1631
        ],
        "PRBMathSD59x18__GmNegativeProduct": [
          1638
        ],
        "PRBMathSD59x18__GmOverflow": [
          1645
        ],
        "PRBMathSD59x18__LogInputTooSmall": [
          1650
        ],
        "PRBMathSD59x18__MulInputTooSmall": [
          1653
        ],
        "PRBMathSD59x18__MulOverflow": [
          1658
        ],
        "PRBMathSD59x18__PowuOverflow": [
          1663
        ],
        "PRBMathSD59x18__SqrtNegativeInput": [
          1668
        ],
        "PRBMathSD59x18__SqrtOverflow": [
          1673
        ],
        "PRBMathUD60x18__AddOverflow": [
          1680
        ],
        "PRBMathUD60x18__CeilOverflow": [
          1685
        ],
        "PRBMathUD60x18__Exp2InputTooBig": [
          1695
        ],
        "PRBMathUD60x18__ExpInputTooBig": [
          1690
        ],
        "PRBMathUD60x18__FromUintOverflow": [
          1700
        ],
        "PRBMathUD60x18__GmOverflow": [
          1707
        ],
        "PRBMathUD60x18__LogInputTooSmall": [
          1712
        ],
        "PRBMathUD60x18__SqrtOverflow": [
          1717
        ],
        "PRBMathUD60x18__SubUnderflow": [
          1724
        ],
        "PRBMath__MulDivFixedPointOverflow": [
          1575
        ],
        "PRBMath__MulDivOverflow": [
          1582
        ],
        "PRBMath__MulDivSignedInputTooSmall": [
          1585
        ],
        "PRBMath__MulDivSignedOverflow": [
          1590
        ],
        "PolicyToken": [
          6334
        ],
        "PoolLPToken": [
          6380
        ],
        "SafeERC20": [
          918
        ],
        "Strings": [
          1556
        ]
      },
      "id": 3833,
      "license": "MIT",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 3502,
          "literals": [
            "solidity",
            "0.8",
            ".9"
          ],
          "nodeType": "PragmaDirective",
          "src": "32:22:14"
        },
        {
          "absolutePath": "project:/contracts/PolicyToken.sol",
          "file": "./PolicyToken.sol",
          "id": 3503,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 6335,
          "src": "56:27:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "project:/contracts/NaughtyPair.sol",
          "file": "./NaughtyPair.sol",
          "id": 3504,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 4525,
          "src": "84:27:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "id": 3505,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 670,
          "src": "113:56:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "project:/contracts/interfaces/INaughtyPair.sol",
          "file": "./interfaces/INaughtyPair.sol",
          "id": 3506,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 6746,
          "src": "170:39:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "project:/contracts/interfaces/INaughtyFactory.sol",
          "file": "./interfaces/INaughtyFactory.sol",
          "id": 3507,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 6680,
          "src": "210:42:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "project:/contracts/interfaces/IPolicyCore.sol",
          "file": "./interfaces/IPolicyCore.sol",
          "id": 3508,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 6919,
          "src": "253:38:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
          "file": "@openzeppelin/contracts/utils/Strings.sol",
          "id": 3509,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 3833,
          "sourceUnit": 1557,
          "src": "293:51:14",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 3511,
                "name": "INaughtyFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6679,
                "src": "659:15:14"
              },
              "id": 3512,
              "nodeType": "InheritanceSpecifier",
              "src": "659:15:14"
            }
          ],
          "canonicalName": "NaughtyFactory",
          "contractDependencies": [
            4524,
            6334
          ],
          "contractKind": "contract",
          "documentation": {
            "id": 3510,
            "nodeType": "StructuredDocumentation",
            "src": "346:284:14",
            "text": " @title Naughty Factory\n @dev Factory contract to deploy new pools periodically\n      Each pool(product) will have a unique naughtyId\n      Each pool will have its pool token\n      PolicyToken - Stablecoin\n      Token 0 may change but Token 1 is always stablecoin."
          },
          "fullyImplemented": true,
          "id": 3832,
          "linearizedBaseContracts": [
            3832,
            6679
          ],
          "name": "NaughtyFactory",
          "nameLocation": "641:14:14",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "id": 3515,
              "libraryName": {
                "id": 3513,
                "name": "Strings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1556,
                "src": "687:7:14"
              },
              "nodeType": "UsingForDirective",
              "src": "681:26:14",
              "typeName": {
                "id": 3514,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "699:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            {
              "constant": false,
              "id": 3521,
              "mutability": "mutable",
              "name": "getPair",
              "nameLocation": "826:7:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "778:55:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "typeName": {
                "id": 3520,
                "keyType": {
                  "id": 3516,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "786:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "778:47:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                  "typeString": "mapping(address => mapping(address => address))"
                },
                "valueType": {
                  "id": 3519,
                  "keyType": {
                    "id": 3517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "797:27:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "valueType": {
                    "id": 3518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 3524,
              "mutability": "mutable",
              "name": "allPairs",
              "nameLocation": "850:8:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "840:18:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                "typeString": "address[]"
              },
              "typeName": {
                "baseType": {
                  "id": 3522,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "840:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 3523,
                "nodeType": "ArrayTypeName",
                "src": "840:9:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 3527,
              "mutability": "mutable",
              "name": "allTokens",
              "nameLocation": "874:9:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "864:19:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                "typeString": "address[]"
              },
              "typeName": {
                "baseType": {
                  "id": 3525,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "864:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 3526,
                "nodeType": "ArrayTypeName",
                "src": "864:9:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "functionSelector": "f2f2fff5",
              "id": 3529,
              "mutability": "mutable",
              "name": "_nextId",
              "nameLocation": "905:7:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "890:22:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 3528,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "e30145e0",
              "id": 3531,
              "mutability": "mutable",
              "name": "policyCore",
              "nameLocation": "934:10:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "919:25:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 3530,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "919:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "baseFunctions": [
                6651
              ],
              "constant": false,
              "functionSelector": "017e7e58",
              "id": 3533,
              "mutability": "mutable",
              "name": "feeTo",
              "nameLocation": "966:5:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "951:20:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 3532,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "951:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "094b7415",
              "id": 3535,
              "mutability": "mutable",
              "name": "feeToSetter",
              "nameLocation": "992:11:14",
              "nodeType": "VariableDeclaration",
              "scope": 3832,
              "src": "977:26:14",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 3534,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "977:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "public"
            },
            {
              "body": {
                "id": 3544,
                "nodeType": "Block",
                "src": "1044:43:14",
                "statements": [
                  {
                    "expression": {
                      "id": 3542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3540,
                        "name": "feeToSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3535,
                        "src": "1054:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3541,
                        "name": "_feeToSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3537,
                        "src": "1068:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1054:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3543,
                    "nodeType": "ExpressionStatement",
                    "src": "1054:26:14"
                  }
                ]
              },
              "id": 3545,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3538,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3537,
                    "mutability": "mutable",
                    "name": "_feeToSetter",
                    "nameLocation": "1030:12:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3545,
                    "src": "1022:20:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3536,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1022:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1021:22:14"
              },
              "returnParameters": {
                "id": 3539,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1044:0:14"
              },
              "scope": 3832,
              "src": "1010:77:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3557,
                "nodeType": "Block",
                "src": "1192:139:14",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3549,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1223:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1223:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3551,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3535,
                            "src": "1237:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1223:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066756e6374696f6e",
                          "id": 3553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1262:41:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                            "typeString": "literal_string \"Only feeToSetter can call this function\""
                          },
                          "value": "Only feeToSetter can call this function"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                            "typeString": "literal_string \"Only feeToSetter can call this function\""
                          }
                        ],
                        "id": 3548,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "1202:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 3554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1202:111:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3555,
                    "nodeType": "ExpressionStatement",
                    "src": "1202:111:14"
                  },
                  {
                    "id": 3556,
                    "nodeType": "PlaceholderStatement",
                    "src": "1323:1:14"
                  }
                ]
              },
              "documentation": {
                "id": 3546,
                "nodeType": "StructuredDocumentation",
                "src": "1093:67:14",
                "text": " @notice Only feeToSetter can call some functions"
              },
              "id": 3558,
              "name": "onlyFeeToSetter",
              "nameLocation": "1174:15:14",
              "nodeType": "ModifierDefinition",
              "parameters": {
                "id": 3547,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1189:2:14"
              },
              "src": "1165:166:14",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 3574,
                "nodeType": "Block",
                "src": "1493:91:14",
                "statements": [
                  {
                    "assignments": [
                      3565
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3565,
                        "mutability": "mutable",
                        "name": "currentToken",
                        "nameLocation": "1511:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3574,
                        "src": "1503:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3564,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1503:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3569,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3566,
                        "name": "_nextId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3529,
                        "src": "1526:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 3567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1536:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1526:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1503:34:14"
                  },
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 3570,
                        "name": "allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "1554:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3572,
                      "indexExpression": {
                        "id": 3571,
                        "name": "currentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3565,
                        "src": "1564:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1554:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 3563,
                    "id": 3573,
                    "nodeType": "Return",
                    "src": "1547:30:14"
                  }
                ]
              },
              "documentation": {
                "id": 3559,
                "nodeType": "StructuredDocumentation",
                "src": "1337:88:14",
                "text": " @notice Next token to be deployed\n @return Latest token address"
              },
              "functionSelector": "9fd2650e",
              "id": 3575,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getLatestTokenAddress",
              "nameLocation": "1439:21:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3560,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1460:2:14"
              },
              "returnParameters": {
                "id": 3563,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3562,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3575,
                    "src": "1484:7:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3561,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1484:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1483:9:14"
              },
              "scope": 3832,
              "src": "1430:154:14",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                6660
              ],
              "body": {
                "id": 3613,
                "nodeType": "Block",
                "src": "1962:356:14",
                "statements": [
                  {
                    "assignments": [
                      3586,
                      3588
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3586,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "2032:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3613,
                        "src": "2024:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2024:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3588,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "2048:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3613,
                        "src": "2040:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2040:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3602,
                    "initialValue": {
                      "condition": {
                        "arguments": [
                          {
                            "id": 3593,
                            "name": "_tokenAddress2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3580,
                            "src": "2115:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3590,
                                "name": "policyCore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3531,
                                "src": "2070:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3589,
                              "name": "IPolicyCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6918,
                              "src": "2058:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$6918_$",
                                "typeString": "type(contract IPolicyCore)"
                              }
                            },
                            "id": 3591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2058:23:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPolicyCore_$6918",
                              "typeString": "contract IPolicyCore"
                            }
                          },
                          "id": 3592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStablecoinAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6862,
                          "src": "2058:56:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2058:72:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "id": 3598,
                            "name": "_tokenAddress2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3580,
                            "src": "2193:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3599,
                            "name": "_tokenAddress1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3578,
                            "src": "2209:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 3600,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2192:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "id": 3601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2058:166:14",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 3595,
                            "name": "_tokenAddress1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3578,
                            "src": "2146:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3596,
                            "name": "_tokenAddress2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3580,
                            "src": "2162:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 3597,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2145:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2023:201:14"
                  },
                  {
                    "assignments": [
                      3604
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3604,
                        "mutability": "mutable",
                        "name": "_pairAddress",
                        "nameLocation": "2243:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3613,
                        "src": "2235:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3603,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2235:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3610,
                    "initialValue": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3605,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3521,
                          "src": "2258:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 3607,
                        "indexExpression": {
                          "id": 3606,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3586,
                          "src": "2266:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2258:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3609,
                      "indexExpression": {
                        "id": 3608,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3588,
                        "src": "2274:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2258:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2235:46:14"
                  },
                  {
                    "expression": {
                      "id": 3611,
                      "name": "_pairAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3604,
                      "src": "2299:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 3584,
                    "id": 3612,
                    "nodeType": "Return",
                    "src": "2292:19:14"
                  }
                ]
              },
              "documentation": {
                "id": 3576,
                "nodeType": "StructuredDocumentation",
                "src": "1590:237:14",
                "text": " @notice Get the pair address deployed by the factory\n         PolicyToken address first, and then stablecoin address\n         The order of the token not matters\n @return Pool address of the two tokens"
              },
              "functionSelector": "b4f69a2f",
              "id": 3614,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getPairAddress",
              "nameLocation": "1841:14:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3581,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3578,
                    "mutability": "mutable",
                    "name": "_tokenAddress1",
                    "nameLocation": "1864:14:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3614,
                    "src": "1856:22:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3577,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1856:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3580,
                    "mutability": "mutable",
                    "name": "_tokenAddress2",
                    "nameLocation": "1888:14:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3614,
                    "src": "1880:22:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3579,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1880:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1855:48:14"
              },
              "returnParameters": {
                "id": 3584,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3583,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3614,
                    "src": "1949:7:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3582,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1949:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1948:9:14"
              },
              "scope": 3832,
              "src": "1832:486:14",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3624,
                "nodeType": "Block",
                "src": "2599:41:14",
                "statements": [
                  {
                    "expression": {
                      "id": 3622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3620,
                        "name": "policyCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3531,
                        "src": "2609:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3621,
                        "name": "_policyCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "2622:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2609:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3623,
                    "nodeType": "ExpressionStatement",
                    "src": "2609:24:14"
                  }
                ]
              },
              "documentation": {
                "id": 3615,
                "nodeType": "StructuredDocumentation",
                "src": "2324:210:14",
                "text": " @notice Remember to call this function to set the policyCore address\n         < PolicyCore should be the owner of policyToken >\n @param _policyCore: Address of policyCore contract"
              },
              "functionSelector": "61c8f99d",
              "id": 3625,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "setPolicyCoreAddress",
              "nameLocation": "2548:20:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3618,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3617,
                    "mutability": "mutable",
                    "name": "_policyCore",
                    "nameLocation": "2577:11:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3625,
                    "src": "2569:19:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3616,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2569:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2568:21:14"
              },
              "returnParameters": {
                "id": 3619,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2599:0:14"
              },
              "scope": 3832,
              "src": "2539:101:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3637,
                "nodeType": "Block",
                "src": "2802:31:14",
                "statements": [
                  {
                    "expression": {
                      "id": 3635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3633,
                        "name": "feeTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "2812:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3634,
                        "name": "_feeTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3628,
                        "src": "2820:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2812:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3636,
                    "nodeType": "ExpressionStatement",
                    "src": "2812:14:14"
                  }
                ]
              },
              "documentation": {
                "id": 3626,
                "nodeType": "StructuredDocumentation",
                "src": "2646:92:14",
                "text": " @notice Set feeTo address\n @param _feeTo Address to receive the fee"
              },
              "functionSelector": "f46901ed",
              "id": 3638,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 3631,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 3630,
                    "name": "onlyFeeToSetter",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3558,
                    "src": "2786:15:14"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2786:15:14"
                }
              ],
              "name": "setFeeTo",
              "nameLocation": "2752:8:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3629,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3628,
                    "mutability": "mutable",
                    "name": "_feeTo",
                    "nameLocation": "2769:6:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3638,
                    "src": "2761:14:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3627,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2761:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2760:16:14"
              },
              "returnParameters": {
                "id": 3632,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2802:0:14"
              },
              "scope": 3832,
              "src": "2743:90:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3650,
                "nodeType": "Block",
                "src": "3021:43:14",
                "statements": [
                  {
                    "expression": {
                      "id": 3648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3646,
                        "name": "feeToSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3535,
                        "src": "3031:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3647,
                        "name": "_feeToSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3641,
                        "src": "3045:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3031:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3649,
                    "nodeType": "ExpressionStatement",
                    "src": "3031:26:14"
                  }
                ]
              },
              "documentation": {
                "id": 3639,
                "nodeType": "StructuredDocumentation",
                "src": "2839:106:14",
                "text": " @notice Set feeToSetter address\n @param _feeToSetter Address to control the feeTo"
              },
              "functionSelector": "a2e74af6",
              "id": 3651,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 3644,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 3643,
                    "name": "onlyFeeToSetter",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3558,
                    "src": "3005:15:14"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "3005:15:14"
                }
              ],
              "name": "setFeeToSetter",
              "nameLocation": "2959:14:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3642,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3641,
                    "mutability": "mutable",
                    "name": "_feeToSetter",
                    "nameLocation": "2982:12:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3651,
                    "src": "2974:20:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3640,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2974:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2973:22:14"
              },
              "returnParameters": {
                "id": 3645,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3021:0:14"
              },
              "scope": 3832,
              "src": "2950:114:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "baseFunctions": [
                6678
              ],
              "body": {
                "id": 3728,
                "nodeType": "Block",
                "src": "3511:767:14",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 3668,
                                "name": "_stablecoin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3656,
                                "src": "3586:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3665,
                                    "name": "policyCore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3531,
                                    "src": "3554:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3664,
                                  "name": "IPolicyCore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6918,
                                  "src": "3542:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$6918_$",
                                    "typeString": "type(contract IPolicyCore)"
                                  }
                                },
                                "id": 3666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3542:23:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPolicyCore_$6918",
                                  "typeString": "contract IPolicyCore"
                                }
                              },
                              "id": 3667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isStablecoinAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6862,
                              "src": "3542:43:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view external returns (bool)"
                              }
                            },
                            "id": 3669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3542:56:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 3670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3602:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3542:64:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c696379546f6b656e20616e6420737461626c65636f696e",
                          "id": 3672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3620:56:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                            "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                          },
                          "value": "You give the wrong order of policyToken and stablecoin"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                            "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                          }
                        ],
                        "id": 3663,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3521:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 3673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3521:165:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3674,
                    "nodeType": "ExpressionStatement",
                    "src": "3521:165:14"
                  },
                  {
                    "assignments": [
                      3676
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3676,
                        "mutability": "mutable",
                        "name": "bytecode",
                        "nameLocation": "3710:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "3697:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3675,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3697:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3681,
                    "initialValue": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3678,
                            "name": "NaughtyPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4524,
                            "src": "3726:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4524_$",
                              "typeString": "type(contract NaughtyPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4524_$",
                              "typeString": "type(contract NaughtyPair)"
                            }
                          ],
                          "id": 3677,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "3721:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 3679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3721:17:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_NaughtyPair_$4524",
                          "typeString": "type(contract NaughtyPair)"
                        }
                      },
                      "id": 3680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "3721:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3697:54:14"
                  },
                  {
                    "assignments": [
                      3683
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3683,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "3770:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "3762:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3682,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3762:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3695,
                    "initialValue": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3688,
                                  "name": "_policyTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3654,
                                  "src": "3850:19:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3687,
                                "name": "addressToString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3804,
                                "src": "3834:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (address) pure returns (string memory)"
                                }
                              },
                              "id": 3689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3834:36:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3691,
                                  "name": "_stablecoin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3656,
                                  "src": "3904:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3690,
                                "name": "addressToString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3804,
                                "src": "3888:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (address) pure returns (string memory)"
                                }
                              },
                              "id": 3692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3888:28:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 3685,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "3800:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3800:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3800:130:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3684,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "3777:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3777:163:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3762:178:14"
                  },
                  {
                    "assignments": [
                      3697
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3697,
                        "mutability": "mutable",
                        "name": "_poolAddress",
                        "nameLocation": "3959:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "3951:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3951:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3702,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 3699,
                          "name": "bytecode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3676,
                          "src": "3982:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 3700,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3683,
                          "src": "3992:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 3698,
                        "name": "_deploy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3783,
                        "src": "3974:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes memory,bytes32) returns (address)"
                        }
                      },
                      "id": 3701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3974:23:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3951:46:14"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3707,
                          "name": "_policyTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3654,
                          "src": "4059:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3708,
                          "name": "_stablecoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3656,
                          "src": "4092:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3709,
                          "name": "_deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3658,
                          "src": "4117:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3704,
                              "name": "_poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3697,
                              "src": "4021:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3703,
                            "name": "INaughtyPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6745,
                            "src": "4008:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INaughtyPair_$6745_$",
                              "typeString": "type(contract INaughtyPair)"
                            }
                          },
                          "id": 3705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4008:26:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INaughtyPair_$6745",
                            "typeString": "contract INaughtyPair"
                          }
                        },
                        "id": 3706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6744,
                        "src": "4008:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256) external"
                        }
                      },
                      "id": 3710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4008:128:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3711,
                    "nodeType": "ExpressionStatement",
                    "src": "4008:128:14"
                  },
                  {
                    "expression": {
                      "id": 3718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 3712,
                            "name": "getPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3521,
                            "src": "4147:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                              "typeString": "mapping(address => mapping(address => address))"
                            }
                          },
                          "id": 3715,
                          "indexExpression": {
                            "id": 3713,
                            "name": "_policyTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3654,
                            "src": "4155:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4147:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 3716,
                        "indexExpression": {
                          "id": 3714,
                          "name": "_stablecoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3656,
                          "src": "4176:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "4147:41:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 3717,
                        "name": "_poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3697,
                        "src": "4191:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4147:56:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3719,
                    "nodeType": "ExpressionStatement",
                    "src": "4147:56:14"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3723,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3697,
                          "src": "4228:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 3720,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3524,
                          "src": "4214:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 3722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "4214:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                          "typeString": "function (address[] storage pointer,address)"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4214:27:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3725,
                    "nodeType": "ExpressionStatement",
                    "src": "4214:27:14"
                  },
                  {
                    "expression": {
                      "id": 3726,
                      "name": "_poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3697,
                      "src": "4259:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 3662,
                    "id": 3727,
                    "nodeType": "Return",
                    "src": "4252:19:14"
                  }
                ]
              },
              "documentation": {
                "id": 3652,
                "nodeType": "StructuredDocumentation",
                "src": "3070:292:14",
                "text": " @notice After deploy the policytoken and get the address,\n         we deploy the policyToken - stablecoin pool contract\n @param _policyTokenAddress: Address of policy token\n @param _stablecoin: Address of the stable coin\n @return Address of the pool"
              },
              "functionSelector": "a3232bf3",
              "id": 3729,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "deployPool",
              "nameLocation": "3376:10:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3659,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3654,
                    "mutability": "mutable",
                    "name": "_policyTokenAddress",
                    "nameLocation": "3404:19:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3729,
                    "src": "3396:27:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3653,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3396:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3656,
                    "mutability": "mutable",
                    "name": "_stablecoin",
                    "nameLocation": "3441:11:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3729,
                    "src": "3433:19:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3655,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3433:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3658,
                    "mutability": "mutable",
                    "name": "_deadline",
                    "nameLocation": "3470:9:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3729,
                    "src": "3462:17:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 3657,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3462:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3386:99:14"
              },
              "returnParameters": {
                "id": 3662,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3661,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3729,
                    "src": "3502:7:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3660,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3502:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3501:9:14"
              },
              "scope": 3832,
              "src": "3367:911:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "baseFunctions": [
                6667
              ],
              "body": {
                "id": 3770,
                "nodeType": "Block",
                "src": "4572:316:14",
                "statements": [
                  {
                    "assignments": [
                      3738
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3738,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "4590:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3770,
                        "src": "4582:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3737,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4582:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3745,
                    "initialValue": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3742,
                              "name": "_policyTokenName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3732,
                              "src": "4624:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 3740,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "4607:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "4607:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4607:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3739,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "4597:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4597:45:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4582:60:14"
                  },
                  {
                    "assignments": [
                      3747
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3747,
                        "mutability": "mutable",
                        "name": "bytecode",
                        "nameLocation": "4666:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3770,
                        "src": "4653:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3746,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4653:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3751,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 3749,
                          "name": "_policyTokenName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3732,
                          "src": "4700:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 3748,
                        "name": "getPolicyTokenBytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3831,
                        "src": "4677:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (string memory) view returns (bytes memory)"
                        }
                      },
                      "id": 3750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4677:40:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4653:64:14"
                  },
                  {
                    "assignments": [
                      3753
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3753,
                        "mutability": "mutable",
                        "name": "_policTokenAddress",
                        "nameLocation": "4736:18:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3770,
                        "src": "4728:26:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3758,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 3755,
                          "name": "bytecode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3747,
                          "src": "4765:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 3756,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3738,
                          "src": "4775:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 3754,
                        "name": "_deploy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3783,
                        "src": "4757:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes memory,bytes32) returns (address)"
                        }
                      },
                      "id": 3757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4757:23:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4728:52:14"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3762,
                          "name": "_policTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3753,
                          "src": "4806:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 3759,
                          "name": "allTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3527,
                          "src": "4791:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 3761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "4791:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                          "typeString": "function (address[] storage pointer,address)"
                        }
                      },
                      "id": 3763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4791:34:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3764,
                    "nodeType": "ExpressionStatement",
                    "src": "4791:34:14"
                  },
                  {
                    "expression": {
                      "id": 3766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4836:9:14",
                      "subExpression": {
                        "id": 3765,
                        "name": "_nextId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3529,
                        "src": "4836:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3767,
                    "nodeType": "ExpressionStatement",
                    "src": "4836:9:14"
                  },
                  {
                    "expression": {
                      "id": 3768,
                      "name": "_policTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3753,
                      "src": "4863:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 3736,
                    "id": 3769,
                    "nodeType": "Return",
                    "src": "4856:25:14"
                  }
                ]
              },
              "documentation": {
                "id": 3730,
                "nodeType": "StructuredDocumentation",
                "src": "4284:179:14",
                "text": " @notice For each round we need to first create the policytoken(ERC20)\n @param _policyTokenName: Name of the policyToken\n @return PolicyToken address"
              },
              "functionSelector": "f03c6132",
              "id": 3771,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "deployPolicyToken",
              "nameLocation": "4477:17:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3733,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3732,
                    "mutability": "mutable",
                    "name": "_policyTokenName",
                    "nameLocation": "4509:16:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3771,
                    "src": "4495:30:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3731,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "4495:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4494:32:14"
              },
              "returnParameters": {
                "id": 3736,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3735,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3771,
                    "src": "4559:7:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3734,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4559:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4558:9:14"
              },
              "scope": 3832,
              "src": "4468:420:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3782,
                "nodeType": "Block",
                "src": "5056:189:14",
                "statements": [
                  {
                    "AST": {
                      "nodeType": "YulBlock",
                      "src": "5075:164:14",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5089:54:14",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5105:1:14",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "5112:4:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5118:4:14",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5108:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5108:15:14"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "5131:4:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5125:5:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5125:11:14"
                              },
                              {
                                "name": "salt",
                                "nodeType": "YulIdentifier",
                                "src": "5138:4:14"
                              }
                            ],
                            "functionName": {
                              "name": "create2",
                              "nodeType": "YulIdentifier",
                              "src": "5097:7:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5097:46:14"
                          },
                          "variableNames": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "5089:4:14"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5185:44:14",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5210:1:14",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5213:1:14",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "5203:6:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5203:12:14"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5203:12:14"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5178:4:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "5166:11:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5166:17:14"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5159:6:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5159:25:14"
                          },
                          "nodeType": "YulIf",
                          "src": "5156:73:14"
                        }
                      ]
                    },
                    "evmVersion": "constantinople",
                    "externalReferences": [
                      {
                        "declaration": 3779,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5089:4:14",
                        "valueSize": 1
                      },
                      {
                        "declaration": 3779,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5178:4:14",
                        "valueSize": 1
                      },
                      {
                        "declaration": 3774,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5112:4:14",
                        "valueSize": 1
                      },
                      {
                        "declaration": 3774,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5131:4:14",
                        "valueSize": 1
                      },
                      {
                        "declaration": 3776,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5138:4:14",
                        "valueSize": 1
                      }
                    ],
                    "id": 3781,
                    "nodeType": "InlineAssembly",
                    "src": "5066:173:14"
                  }
                ]
              },
              "documentation": {
                "id": 3772,
                "nodeType": "StructuredDocumentation",
                "src": "4894:55:14",
                "text": " @notice Deploy function with create2"
              },
              "id": 3783,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "_deploy",
              "nameLocation": "4963:7:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3777,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3774,
                    "mutability": "mutable",
                    "name": "code",
                    "nameLocation": "4984:4:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3783,
                    "src": "4971:17:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 3773,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4971:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3776,
                    "mutability": "mutable",
                    "name": "salt",
                    "nameLocation": "4998:4:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3783,
                    "src": "4990:12:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 3775,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4990:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4970:33:14"
              },
              "returnParameters": {
                "id": 3780,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3779,
                    "mutability": "mutable",
                    "name": "addr",
                    "nameLocation": "5046:4:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3783,
                    "src": "5038:12:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3778,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5038:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5037:14:14"
              },
              "scope": 3832,
              "src": "4954:291:14",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 3803,
                "nodeType": "Block",
                "src": "5484:65:14",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "3230",
                          "id": 3800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5539:2:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3795,
                                      "name": "_addr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3786,
                                      "src": "5518:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5510:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint160_$",
                                      "typeString": "type(uint160)"
                                    },
                                    "typeName": {
                                      "id": 3793,
                                      "name": "uint160",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5510:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5510:14:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 3792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5502:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 3791,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5502:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5502:23:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3798,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5501:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toHexString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1555,
                        "src": "5501:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (string memory)"
                        }
                      },
                      "id": 3801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5501:41:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "functionReturnParameters": 3790,
                    "id": 3802,
                    "nodeType": "Return",
                    "src": "5494:48:14"
                  }
                ]
              },
              "documentation": {
                "id": 3784,
                "nodeType": "StructuredDocumentation",
                "src": "5251:122:14",
                "text": " @notice Transfer address to string\n @param _addr: Input address\n @return Output string form"
              },
              "id": 3804,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "addressToString",
              "nameLocation": "5387:15:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3787,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3786,
                    "mutability": "mutable",
                    "name": "_addr",
                    "nameLocation": "5411:5:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3804,
                    "src": "5403:13:14",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3785,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5403:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5402:15:14"
              },
              "returnParameters": {
                "id": 3790,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3789,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3804,
                    "src": "5465:13:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3788,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5465:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5464:15:14"
              },
              "scope": 3832,
              "src": "5378:171:14",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 3830,
                "nodeType": "Block",
                "src": "5802:326:14",
                "statements": [
                  {
                    "assignments": [
                      3813
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3813,
                        "mutability": "mutable",
                        "name": "bytecode",
                        "nameLocation": "5825:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3830,
                        "src": "5812:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3812,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5812:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3818,
                    "initialValue": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3815,
                            "name": "PolicyToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6334,
                            "src": "5841:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PolicyToken_$6334_$",
                              "typeString": "type(contract PolicyToken)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_PolicyToken_$6334_$",
                              "typeString": "type(contract PolicyToken)"
                            }
                          ],
                          "id": 3814,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "5836:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 3816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5836:17:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_PolicyToken_$6334",
                          "typeString": "type(contract PolicyToken)"
                        }
                      },
                      "id": 3817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "5836:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5812:54:14"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3821,
                          "name": "bytecode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3813,
                          "src": "6035:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 3824,
                              "name": "_tokenName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3807,
                              "src": "6072:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3825,
                              "name": "_tokenName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3807,
                              "src": "6084:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3826,
                              "name": "policyCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3531,
                              "src": "6096:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3822,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "6061:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "6061:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6061:46:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 3819,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967295,
                          "src": "6001:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 3820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "src": "6001:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 3828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6001:120:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "functionReturnParameters": 3811,
                    "id": 3829,
                    "nodeType": "Return",
                    "src": "5982:139:14"
                  }
                ]
              },
              "documentation": {
                "id": 3805,
                "nodeType": "StructuredDocumentation",
                "src": "5555:119:14",
                "text": " @notice Get the policyToken bytecode (with parameters)\n @param _tokenName: Name of policyToken"
              },
              "id": 3831,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getPolicyTokenBytecode",
              "nameLocation": "5688:22:14",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 3808,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3807,
                    "mutability": "mutable",
                    "name": "_tokenName",
                    "nameLocation": "5725:10:14",
                    "nodeType": "VariableDeclaration",
                    "scope": 3831,
                    "src": "5711:24:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3806,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5711:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5710:26:14"
              },
              "returnParameters": {
                "id": 3811,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3810,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 3831,
                    "src": "5784:12:14",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 3809,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5784:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5783:14:14"
              },
              "scope": 3832,
              "src": "5679:449:14",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "scope": 3833,
          "src": "632:5498:14",
          "usedErrors": []
        }
      ],
      "src": "32:6099:14"
    },
    "compiler": {
      "name": "solc",
      "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
    },
    "networks": {
      "4": {
        "events": {},
        "links": {},
        "address": "0x8fF5da22990E15D4e6B63025A0B493bd802eD024",
        "transactionHash": "0x6dac6911da730a0b84efbf8e1d043dc3e5a1be0323fd30373556e332e2bf24bd"
      }
    },
    "schemaVersion": "3.4.1",
    "updatedAt": "2021-11-22T05:42:38.427Z",
    "networkType": "ethereum",
    "devdoc": {
      "details": "Factory contract to deploy new pools periodically      Each pool(product) will have a unique naughtyId      Each pool will have its pool token      PolicyToken - Stablecoin      Token 0 may change but Token 1 is always stablecoin.",
      "kind": "dev",
      "methods": {
        "deployPolicyToken(string)": {
          "params": {
            "_policyTokenName": ": Name of the policyToken"
          },
          "returns": {
            "_0": "PolicyToken address"
          }
        },
        "deployPool(address,address,uint256)": {
          "params": {
            "_policyTokenAddress": ": Address of policy token",
            "_stablecoin": ": Address of the stable coin"
          },
          "returns": {
            "_0": "Address of the pool"
          }
        },
        "getLatestTokenAddress()": {
          "returns": {
            "_0": "Latest token address"
          }
        },
        "getPairAddress(address,address)": {
          "returns": {
            "_0": "Pool address of the two tokens"
          }
        },
        "setFeeTo(address)": {
          "params": {
            "_feeTo": "Address to receive the fee"
          }
        },
        "setFeeToSetter(address)": {
          "params": {
            "_feeToSetter": "Address to control the feeTo"
          }
        },
        "setPolicyCoreAddress(address)": {
          "params": {
            "_policyCore": ": Address of policyCore contract"
          }
        }
      },
      "title": "Naughty Factory",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "deployPolicyToken(string)": {
          "notice": "For each round we need to first create the policytoken(ERC20)"
        },
        "deployPool(address,address,uint256)": {
          "notice": "After deploy the policytoken and get the address,         we deploy the policyToken - stablecoin pool contract"
        },
        "getLatestTokenAddress()": {
          "notice": "Next token to be deployed"
        },
        "getPairAddress(address,address)": {
          "notice": "Get the pair address deployed by the factory         PolicyToken address first, and then stablecoin address         The order of the token not matters"
        },
        "setFeeTo(address)": {
          "notice": "Set feeTo address"
        },
        "setFeeToSetter(address)": {
          "notice": "Set feeToSetter address"
        },
        "setPolicyCoreAddress(address)": {
          "notice": "Remember to call this function to set the policyCore address         < PolicyCore should be the owner of policyToken >"
        }
      },
      "version": 1
    }
  }